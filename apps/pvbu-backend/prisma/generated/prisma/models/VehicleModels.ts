/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `VehicleModels` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/library';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model VehicleModels
 *
 */
export type VehicleModelsModel =
  runtime.Types.Result.DefaultSelection<Prisma.$VehicleModelsPayload>;

export type AggregateVehicleModels = {
  _count: VehicleModelsCountAggregateOutputType | null;
  _avg: VehicleModelsAvgAggregateOutputType | null;
  _sum: VehicleModelsSumAggregateOutputType | null;
  _min: VehicleModelsMinAggregateOutputType | null;
  _max: VehicleModelsMaxAggregateOutputType | null;
};

export type VehicleModelsAvgAggregateOutputType = {
  erpVehicleModelId: number | null;
};

export type VehicleModelsSumAggregateOutputType = {
  erpVehicleModelId: number | null;
};

export type VehicleModelsMinAggregateOutputType = {
  id: string | null;
  name: string | null;
  type: string | null;
  coverImageUrl: string | null;
  batteryRange: string | null;
  chargingTime: string | null;
  erpVehicleModelId: number | null;
  createdAt: Date | null;
};

export type VehicleModelsMaxAggregateOutputType = {
  id: string | null;
  name: string | null;
  type: string | null;
  coverImageUrl: string | null;
  batteryRange: string | null;
  chargingTime: string | null;
  erpVehicleModelId: number | null;
  createdAt: Date | null;
};

export type VehicleModelsCountAggregateOutputType = {
  id: number;
  name: number;
  type: number;
  coverImageUrl: number;
  batteryRange: number;
  chargingTime: number;
  erpVehicleModelId: number;
  createdAt: number;
  _all: number;
};

export type VehicleModelsAvgAggregateInputType = {
  erpVehicleModelId?: true;
};

export type VehicleModelsSumAggregateInputType = {
  erpVehicleModelId?: true;
};

export type VehicleModelsMinAggregateInputType = {
  id?: true;
  name?: true;
  type?: true;
  coverImageUrl?: true;
  batteryRange?: true;
  chargingTime?: true;
  erpVehicleModelId?: true;
  createdAt?: true;
};

export type VehicleModelsMaxAggregateInputType = {
  id?: true;
  name?: true;
  type?: true;
  coverImageUrl?: true;
  batteryRange?: true;
  chargingTime?: true;
  erpVehicleModelId?: true;
  createdAt?: true;
};

export type VehicleModelsCountAggregateInputType = {
  id?: true;
  name?: true;
  type?: true;
  coverImageUrl?: true;
  batteryRange?: true;
  chargingTime?: true;
  erpVehicleModelId?: true;
  createdAt?: true;
  _all?: true;
};

export type VehicleModelsAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which VehicleModels to aggregate.
   */
  where?: Prisma.VehicleModelsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VehicleModels to fetch.
   */
  orderBy?:
    | Prisma.VehicleModelsOrderByWithRelationInput
    | Prisma.VehicleModelsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.VehicleModelsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VehicleModels from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VehicleModels.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned VehicleModels
   **/
  _count?: true | VehicleModelsCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: VehicleModelsAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: VehicleModelsSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: VehicleModelsMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: VehicleModelsMaxAggregateInputType;
};

export type GetVehicleModelsAggregateType<
  T extends VehicleModelsAggregateArgs,
> = {
  [P in keyof T & keyof AggregateVehicleModels]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateVehicleModels[P]>
    : Prisma.GetScalarType<T[P], AggregateVehicleModels[P]>;
};

export type VehicleModelsGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.VehicleModelsWhereInput;
  orderBy?:
    | Prisma.VehicleModelsOrderByWithAggregationInput
    | Prisma.VehicleModelsOrderByWithAggregationInput[];
  by:
    | Prisma.VehicleModelsScalarFieldEnum[]
    | Prisma.VehicleModelsScalarFieldEnum;
  having?: Prisma.VehicleModelsScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: VehicleModelsCountAggregateInputType | true;
  _avg?: VehicleModelsAvgAggregateInputType;
  _sum?: VehicleModelsSumAggregateInputType;
  _min?: VehicleModelsMinAggregateInputType;
  _max?: VehicleModelsMaxAggregateInputType;
};

export type VehicleModelsGroupByOutputType = {
  id: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt: Date;
  _count: VehicleModelsCountAggregateOutputType | null;
  _avg: VehicleModelsAvgAggregateOutputType | null;
  _sum: VehicleModelsSumAggregateOutputType | null;
  _min: VehicleModelsMinAggregateOutputType | null;
  _max: VehicleModelsMaxAggregateOutputType | null;
};

type GetVehicleModelsGroupByPayload<T extends VehicleModelsGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<VehicleModelsGroupByOutputType, T['by']> & {
        [P in keyof T &
          keyof VehicleModelsGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], VehicleModelsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], VehicleModelsGroupByOutputType[P]>;
      }
    >
  >;

export type VehicleModelsWhereInput = {
  AND?: Prisma.VehicleModelsWhereInput | Prisma.VehicleModelsWhereInput[];
  OR?: Prisma.VehicleModelsWhereInput[];
  NOT?: Prisma.VehicleModelsWhereInput | Prisma.VehicleModelsWhereInput[];
  id?: Prisma.UuidFilter<'VehicleModels'> | string;
  name?: Prisma.StringFilter<'VehicleModels'> | string;
  type?: Prisma.StringFilter<'VehicleModels'> | string;
  coverImageUrl?: Prisma.StringFilter<'VehicleModels'> | string;
  batteryRange?: Prisma.StringFilter<'VehicleModels'> | string;
  chargingTime?: Prisma.StringFilter<'VehicleModels'> | string;
  erpVehicleModelId?: Prisma.IntFilter<'VehicleModels'> | number;
  createdAt?: Prisma.DateTimeFilter<'VehicleModels'> | Date | string;
  vehicleVideos?: Prisma.VehicleVideosListRelationFilter;
  vehicleDocuments?: Prisma.VehicleDocumentsListRelationFilter;
  vehicleGuidelines?: Prisma.VehicleGuidelinesListRelationFilter;
  AssignedVehicles?: Prisma.AssignedVehiclesListRelationFilter;
};

export type VehicleModelsOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  coverImageUrl?: Prisma.SortOrder;
  batteryRange?: Prisma.SortOrder;
  chargingTime?: Prisma.SortOrder;
  erpVehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  vehicleVideos?: Prisma.VehicleVideosOrderByRelationAggregateInput;
  vehicleDocuments?: Prisma.VehicleDocumentsOrderByRelationAggregateInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesOrderByRelationAggregateInput;
  AssignedVehicles?: Prisma.AssignedVehiclesOrderByRelationAggregateInput;
};

export type VehicleModelsWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.VehicleModelsWhereInput | Prisma.VehicleModelsWhereInput[];
    OR?: Prisma.VehicleModelsWhereInput[];
    NOT?: Prisma.VehicleModelsWhereInput | Prisma.VehicleModelsWhereInput[];
    name?: Prisma.StringFilter<'VehicleModels'> | string;
    type?: Prisma.StringFilter<'VehicleModels'> | string;
    coverImageUrl?: Prisma.StringFilter<'VehicleModels'> | string;
    batteryRange?: Prisma.StringFilter<'VehicleModels'> | string;
    chargingTime?: Prisma.StringFilter<'VehicleModels'> | string;
    erpVehicleModelId?: Prisma.IntFilter<'VehicleModels'> | number;
    createdAt?: Prisma.DateTimeFilter<'VehicleModels'> | Date | string;
    vehicleVideos?: Prisma.VehicleVideosListRelationFilter;
    vehicleDocuments?: Prisma.VehicleDocumentsListRelationFilter;
    vehicleGuidelines?: Prisma.VehicleGuidelinesListRelationFilter;
    AssignedVehicles?: Prisma.AssignedVehiclesListRelationFilter;
  },
  'id'
>;

export type VehicleModelsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  coverImageUrl?: Prisma.SortOrder;
  batteryRange?: Prisma.SortOrder;
  chargingTime?: Prisma.SortOrder;
  erpVehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  _count?: Prisma.VehicleModelsCountOrderByAggregateInput;
  _avg?: Prisma.VehicleModelsAvgOrderByAggregateInput;
  _max?: Prisma.VehicleModelsMaxOrderByAggregateInput;
  _min?: Prisma.VehicleModelsMinOrderByAggregateInput;
  _sum?: Prisma.VehicleModelsSumOrderByAggregateInput;
};

export type VehicleModelsScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.VehicleModelsScalarWhereWithAggregatesInput
    | Prisma.VehicleModelsScalarWhereWithAggregatesInput[];
  OR?: Prisma.VehicleModelsScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.VehicleModelsScalarWhereWithAggregatesInput
    | Prisma.VehicleModelsScalarWhereWithAggregatesInput[];
  id?: Prisma.UuidWithAggregatesFilter<'VehicleModels'> | string;
  name?: Prisma.StringWithAggregatesFilter<'VehicleModels'> | string;
  type?: Prisma.StringWithAggregatesFilter<'VehicleModels'> | string;
  coverImageUrl?: Prisma.StringWithAggregatesFilter<'VehicleModels'> | string;
  batteryRange?: Prisma.StringWithAggregatesFilter<'VehicleModels'> | string;
  chargingTime?: Prisma.StringWithAggregatesFilter<'VehicleModels'> | string;
  erpVehicleModelId?: Prisma.IntWithAggregatesFilter<'VehicleModels'> | number;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<'VehicleModels'>
    | Date
    | string;
};

export type VehicleModelsCreateInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleVideos?: Prisma.VehicleVideosCreateNestedManyWithoutVehicleModelInput;
  vehicleDocuments?: Prisma.VehicleDocumentsCreateNestedManyWithoutVehicleModelInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesCreateNestedManyWithoutVehicleModelInput;
  AssignedVehicles?: Prisma.AssignedVehiclesCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsUncheckedCreateInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleVideos?: Prisma.VehicleVideosUncheckedCreateNestedManyWithoutVehicleModelInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUncheckedCreateNestedManyWithoutVehicleModelInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUncheckedCreateNestedManyWithoutVehicleModelInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUncheckedCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleVideos?: Prisma.VehicleVideosUpdateManyWithoutVehicleModelNestedInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUpdateManyWithoutVehicleModelNestedInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUpdateManyWithoutVehicleModelNestedInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleVideos?: Prisma.VehicleVideosUncheckedUpdateManyWithoutVehicleModelNestedInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUncheckedUpdateManyWithoutVehicleModelNestedInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUncheckedUpdateManyWithoutVehicleModelNestedInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUncheckedUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsCreateManyInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
};

export type VehicleModelsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VehicleModelsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VehicleModelsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  coverImageUrl?: Prisma.SortOrder;
  batteryRange?: Prisma.SortOrder;
  chargingTime?: Prisma.SortOrder;
  erpVehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type VehicleModelsAvgOrderByAggregateInput = {
  erpVehicleModelId?: Prisma.SortOrder;
};

export type VehicleModelsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  coverImageUrl?: Prisma.SortOrder;
  batteryRange?: Prisma.SortOrder;
  chargingTime?: Prisma.SortOrder;
  erpVehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type VehicleModelsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  coverImageUrl?: Prisma.SortOrder;
  batteryRange?: Prisma.SortOrder;
  chargingTime?: Prisma.SortOrder;
  erpVehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type VehicleModelsSumOrderByAggregateInput = {
  erpVehicleModelId?: Prisma.SortOrder;
};

export type VehicleModelsScalarRelationFilter = {
  is?: Prisma.VehicleModelsWhereInput;
  isNot?: Prisma.VehicleModelsWhereInput;
};

export type IntFieldUpdateOperationsInput = {
  set?: number;
  increment?: number;
  decrement?: number;
  multiply?: number;
  divide?: number;
};

export type VehicleModelsCreateNestedOneWithoutVehicleVideosInput = {
  create?: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleVideosInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleVideosInput
  >;
  connectOrCreate?: Prisma.VehicleModelsCreateOrConnectWithoutVehicleVideosInput;
  connect?: Prisma.VehicleModelsWhereUniqueInput;
};

export type VehicleModelsUpdateOneRequiredWithoutVehicleVideosNestedInput = {
  create?: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleVideosInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleVideosInput
  >;
  connectOrCreate?: Prisma.VehicleModelsCreateOrConnectWithoutVehicleVideosInput;
  upsert?: Prisma.VehicleModelsUpsertWithoutVehicleVideosInput;
  connect?: Prisma.VehicleModelsWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.VehicleModelsUpdateToOneWithWhereWithoutVehicleVideosInput,
      Prisma.VehicleModelsUpdateWithoutVehicleVideosInput
    >,
    Prisma.VehicleModelsUncheckedUpdateWithoutVehicleVideosInput
  >;
};

export type VehicleModelsCreateNestedOneWithoutVehicleDocumentsInput = {
  create?: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleDocumentsInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleDocumentsInput
  >;
  connectOrCreate?: Prisma.VehicleModelsCreateOrConnectWithoutVehicleDocumentsInput;
  connect?: Prisma.VehicleModelsWhereUniqueInput;
};

export type VehicleModelsUpdateOneRequiredWithoutVehicleDocumentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleDocumentsInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleDocumentsInput
  >;
  connectOrCreate?: Prisma.VehicleModelsCreateOrConnectWithoutVehicleDocumentsInput;
  upsert?: Prisma.VehicleModelsUpsertWithoutVehicleDocumentsInput;
  connect?: Prisma.VehicleModelsWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.VehicleModelsUpdateToOneWithWhereWithoutVehicleDocumentsInput,
      Prisma.VehicleModelsUpdateWithoutVehicleDocumentsInput
    >,
    Prisma.VehicleModelsUncheckedUpdateWithoutVehicleDocumentsInput
  >;
};

export type VehicleModelsCreateNestedOneWithoutVehicleGuidelinesInput = {
  create?: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleGuidelinesInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleGuidelinesInput
  >;
  connectOrCreate?: Prisma.VehicleModelsCreateOrConnectWithoutVehicleGuidelinesInput;
  connect?: Prisma.VehicleModelsWhereUniqueInput;
};

export type VehicleModelsUpdateOneRequiredWithoutVehicleGuidelinesNestedInput =
  {
    create?: Prisma.XOR<
      Prisma.VehicleModelsCreateWithoutVehicleGuidelinesInput,
      Prisma.VehicleModelsUncheckedCreateWithoutVehicleGuidelinesInput
    >;
    connectOrCreate?: Prisma.VehicleModelsCreateOrConnectWithoutVehicleGuidelinesInput;
    upsert?: Prisma.VehicleModelsUpsertWithoutVehicleGuidelinesInput;
    connect?: Prisma.VehicleModelsWhereUniqueInput;
    update?: Prisma.XOR<
      Prisma.XOR<
        Prisma.VehicleModelsUpdateToOneWithWhereWithoutVehicleGuidelinesInput,
        Prisma.VehicleModelsUpdateWithoutVehicleGuidelinesInput
      >,
      Prisma.VehicleModelsUncheckedUpdateWithoutVehicleGuidelinesInput
    >;
  };

export type VehicleModelsCreateNestedOneWithoutAssignedVehiclesInput = {
  create?: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutAssignedVehiclesInput,
    Prisma.VehicleModelsUncheckedCreateWithoutAssignedVehiclesInput
  >;
  connectOrCreate?: Prisma.VehicleModelsCreateOrConnectWithoutAssignedVehiclesInput;
  connect?: Prisma.VehicleModelsWhereUniqueInput;
};

export type VehicleModelsUpdateOneRequiredWithoutAssignedVehiclesNestedInput = {
  create?: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutAssignedVehiclesInput,
    Prisma.VehicleModelsUncheckedCreateWithoutAssignedVehiclesInput
  >;
  connectOrCreate?: Prisma.VehicleModelsCreateOrConnectWithoutAssignedVehiclesInput;
  upsert?: Prisma.VehicleModelsUpsertWithoutAssignedVehiclesInput;
  connect?: Prisma.VehicleModelsWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.VehicleModelsUpdateToOneWithWhereWithoutAssignedVehiclesInput,
      Prisma.VehicleModelsUpdateWithoutAssignedVehiclesInput
    >,
    Prisma.VehicleModelsUncheckedUpdateWithoutAssignedVehiclesInput
  >;
};

export type VehicleModelsCreateWithoutVehicleVideosInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleDocuments?: Prisma.VehicleDocumentsCreateNestedManyWithoutVehicleModelInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesCreateNestedManyWithoutVehicleModelInput;
  AssignedVehicles?: Prisma.AssignedVehiclesCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsUncheckedCreateWithoutVehicleVideosInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleDocuments?: Prisma.VehicleDocumentsUncheckedCreateNestedManyWithoutVehicleModelInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUncheckedCreateNestedManyWithoutVehicleModelInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUncheckedCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsCreateOrConnectWithoutVehicleVideosInput = {
  where: Prisma.VehicleModelsWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleVideosInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleVideosInput
  >;
};

export type VehicleModelsUpsertWithoutVehicleVideosInput = {
  update: Prisma.XOR<
    Prisma.VehicleModelsUpdateWithoutVehicleVideosInput,
    Prisma.VehicleModelsUncheckedUpdateWithoutVehicleVideosInput
  >;
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleVideosInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleVideosInput
  >;
  where?: Prisma.VehicleModelsWhereInput;
};

export type VehicleModelsUpdateToOneWithWhereWithoutVehicleVideosInput = {
  where?: Prisma.VehicleModelsWhereInput;
  data: Prisma.XOR<
    Prisma.VehicleModelsUpdateWithoutVehicleVideosInput,
    Prisma.VehicleModelsUncheckedUpdateWithoutVehicleVideosInput
  >;
};

export type VehicleModelsUpdateWithoutVehicleVideosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleDocuments?: Prisma.VehicleDocumentsUpdateManyWithoutVehicleModelNestedInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUpdateManyWithoutVehicleModelNestedInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsUncheckedUpdateWithoutVehicleVideosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleDocuments?: Prisma.VehicleDocumentsUncheckedUpdateManyWithoutVehicleModelNestedInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUncheckedUpdateManyWithoutVehicleModelNestedInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUncheckedUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsCreateWithoutVehicleDocumentsInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleVideos?: Prisma.VehicleVideosCreateNestedManyWithoutVehicleModelInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesCreateNestedManyWithoutVehicleModelInput;
  AssignedVehicles?: Prisma.AssignedVehiclesCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsUncheckedCreateWithoutVehicleDocumentsInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleVideos?: Prisma.VehicleVideosUncheckedCreateNestedManyWithoutVehicleModelInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUncheckedCreateNestedManyWithoutVehicleModelInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUncheckedCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsCreateOrConnectWithoutVehicleDocumentsInput = {
  where: Prisma.VehicleModelsWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleDocumentsInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleDocumentsInput
  >;
};

export type VehicleModelsUpsertWithoutVehicleDocumentsInput = {
  update: Prisma.XOR<
    Prisma.VehicleModelsUpdateWithoutVehicleDocumentsInput,
    Prisma.VehicleModelsUncheckedUpdateWithoutVehicleDocumentsInput
  >;
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleDocumentsInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleDocumentsInput
  >;
  where?: Prisma.VehicleModelsWhereInput;
};

export type VehicleModelsUpdateToOneWithWhereWithoutVehicleDocumentsInput = {
  where?: Prisma.VehicleModelsWhereInput;
  data: Prisma.XOR<
    Prisma.VehicleModelsUpdateWithoutVehicleDocumentsInput,
    Prisma.VehicleModelsUncheckedUpdateWithoutVehicleDocumentsInput
  >;
};

export type VehicleModelsUpdateWithoutVehicleDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleVideos?: Prisma.VehicleVideosUpdateManyWithoutVehicleModelNestedInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUpdateManyWithoutVehicleModelNestedInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsUncheckedUpdateWithoutVehicleDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleVideos?: Prisma.VehicleVideosUncheckedUpdateManyWithoutVehicleModelNestedInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUncheckedUpdateManyWithoutVehicleModelNestedInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUncheckedUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsCreateWithoutVehicleGuidelinesInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleVideos?: Prisma.VehicleVideosCreateNestedManyWithoutVehicleModelInput;
  vehicleDocuments?: Prisma.VehicleDocumentsCreateNestedManyWithoutVehicleModelInput;
  AssignedVehicles?: Prisma.AssignedVehiclesCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsUncheckedCreateWithoutVehicleGuidelinesInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleVideos?: Prisma.VehicleVideosUncheckedCreateNestedManyWithoutVehicleModelInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUncheckedCreateNestedManyWithoutVehicleModelInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUncheckedCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsCreateOrConnectWithoutVehicleGuidelinesInput = {
  where: Prisma.VehicleModelsWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleGuidelinesInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleGuidelinesInput
  >;
};

export type VehicleModelsUpsertWithoutVehicleGuidelinesInput = {
  update: Prisma.XOR<
    Prisma.VehicleModelsUpdateWithoutVehicleGuidelinesInput,
    Prisma.VehicleModelsUncheckedUpdateWithoutVehicleGuidelinesInput
  >;
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutVehicleGuidelinesInput,
    Prisma.VehicleModelsUncheckedCreateWithoutVehicleGuidelinesInput
  >;
  where?: Prisma.VehicleModelsWhereInput;
};

export type VehicleModelsUpdateToOneWithWhereWithoutVehicleGuidelinesInput = {
  where?: Prisma.VehicleModelsWhereInput;
  data: Prisma.XOR<
    Prisma.VehicleModelsUpdateWithoutVehicleGuidelinesInput,
    Prisma.VehicleModelsUncheckedUpdateWithoutVehicleGuidelinesInput
  >;
};

export type VehicleModelsUpdateWithoutVehicleGuidelinesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleVideos?: Prisma.VehicleVideosUpdateManyWithoutVehicleModelNestedInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUpdateManyWithoutVehicleModelNestedInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsUncheckedUpdateWithoutVehicleGuidelinesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleVideos?: Prisma.VehicleVideosUncheckedUpdateManyWithoutVehicleModelNestedInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUncheckedUpdateManyWithoutVehicleModelNestedInput;
  AssignedVehicles?: Prisma.AssignedVehiclesUncheckedUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsCreateWithoutAssignedVehiclesInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleVideos?: Prisma.VehicleVideosCreateNestedManyWithoutVehicleModelInput;
  vehicleDocuments?: Prisma.VehicleDocumentsCreateNestedManyWithoutVehicleModelInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsUncheckedCreateWithoutAssignedVehiclesInput = {
  id?: string;
  name: string;
  type: string;
  coverImageUrl: string;
  batteryRange: string;
  chargingTime: string;
  erpVehicleModelId: number;
  createdAt?: Date | string;
  vehicleVideos?: Prisma.VehicleVideosUncheckedCreateNestedManyWithoutVehicleModelInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUncheckedCreateNestedManyWithoutVehicleModelInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUncheckedCreateNestedManyWithoutVehicleModelInput;
};

export type VehicleModelsCreateOrConnectWithoutAssignedVehiclesInput = {
  where: Prisma.VehicleModelsWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutAssignedVehiclesInput,
    Prisma.VehicleModelsUncheckedCreateWithoutAssignedVehiclesInput
  >;
};

export type VehicleModelsUpsertWithoutAssignedVehiclesInput = {
  update: Prisma.XOR<
    Prisma.VehicleModelsUpdateWithoutAssignedVehiclesInput,
    Prisma.VehicleModelsUncheckedUpdateWithoutAssignedVehiclesInput
  >;
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateWithoutAssignedVehiclesInput,
    Prisma.VehicleModelsUncheckedCreateWithoutAssignedVehiclesInput
  >;
  where?: Prisma.VehicleModelsWhereInput;
};

export type VehicleModelsUpdateToOneWithWhereWithoutAssignedVehiclesInput = {
  where?: Prisma.VehicleModelsWhereInput;
  data: Prisma.XOR<
    Prisma.VehicleModelsUpdateWithoutAssignedVehiclesInput,
    Prisma.VehicleModelsUncheckedUpdateWithoutAssignedVehiclesInput
  >;
};

export type VehicleModelsUpdateWithoutAssignedVehiclesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleVideos?: Prisma.VehicleVideosUpdateManyWithoutVehicleModelNestedInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUpdateManyWithoutVehicleModelNestedInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUpdateManyWithoutVehicleModelNestedInput;
};

export type VehicleModelsUncheckedUpdateWithoutAssignedVehiclesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  coverImageUrl?: Prisma.StringFieldUpdateOperationsInput | string;
  batteryRange?: Prisma.StringFieldUpdateOperationsInput | string;
  chargingTime?: Prisma.StringFieldUpdateOperationsInput | string;
  erpVehicleModelId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleVideos?: Prisma.VehicleVideosUncheckedUpdateManyWithoutVehicleModelNestedInput;
  vehicleDocuments?: Prisma.VehicleDocumentsUncheckedUpdateManyWithoutVehicleModelNestedInput;
  vehicleGuidelines?: Prisma.VehicleGuidelinesUncheckedUpdateManyWithoutVehicleModelNestedInput;
};

/**
 * Count Type VehicleModelsCountOutputType
 */

export type VehicleModelsCountOutputType = {
  vehicleVideos: number;
  vehicleDocuments: number;
  vehicleGuidelines: number;
  AssignedVehicles: number;
};

export type VehicleModelsCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  vehicleVideos?: boolean | VehicleModelsCountOutputTypeCountVehicleVideosArgs;
  vehicleDocuments?:
    | boolean
    | VehicleModelsCountOutputTypeCountVehicleDocumentsArgs;
  vehicleGuidelines?:
    | boolean
    | VehicleModelsCountOutputTypeCountVehicleGuidelinesArgs;
  AssignedVehicles?:
    | boolean
    | VehicleModelsCountOutputTypeCountAssignedVehiclesArgs;
};

/**
 * VehicleModelsCountOutputType without action
 */
export type VehicleModelsCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModelsCountOutputType
   */
  select?: Prisma.VehicleModelsCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * VehicleModelsCountOutputType without action
 */
export type VehicleModelsCountOutputTypeCountVehicleVideosArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.VehicleVideosWhereInput;
};

/**
 * VehicleModelsCountOutputType without action
 */
export type VehicleModelsCountOutputTypeCountVehicleDocumentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.VehicleDocumentsWhereInput;
};

/**
 * VehicleModelsCountOutputType without action
 */
export type VehicleModelsCountOutputTypeCountVehicleGuidelinesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.VehicleGuidelinesWhereInput;
};

/**
 * VehicleModelsCountOutputType without action
 */
export type VehicleModelsCountOutputTypeCountAssignedVehiclesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AssignedVehiclesWhereInput;
};

export type VehicleModelsSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    type?: boolean;
    coverImageUrl?: boolean;
    batteryRange?: boolean;
    chargingTime?: boolean;
    erpVehicleModelId?: boolean;
    createdAt?: boolean;
    vehicleVideos?: boolean | Prisma.VehicleModels$vehicleVideosArgs<ExtArgs>;
    vehicleDocuments?:
      | boolean
      | Prisma.VehicleModels$vehicleDocumentsArgs<ExtArgs>;
    vehicleGuidelines?:
      | boolean
      | Prisma.VehicleModels$vehicleGuidelinesArgs<ExtArgs>;
    AssignedVehicles?:
      | boolean
      | Prisma.VehicleModels$AssignedVehiclesArgs<ExtArgs>;
    _count?: boolean | Prisma.VehicleModelsCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['vehicleModels']
>;

export type VehicleModelsSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    type?: boolean;
    coverImageUrl?: boolean;
    batteryRange?: boolean;
    chargingTime?: boolean;
    erpVehicleModelId?: boolean;
    createdAt?: boolean;
  },
  ExtArgs['result']['vehicleModels']
>;

export type VehicleModelsSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    type?: boolean;
    coverImageUrl?: boolean;
    batteryRange?: boolean;
    chargingTime?: boolean;
    erpVehicleModelId?: boolean;
    createdAt?: boolean;
  },
  ExtArgs['result']['vehicleModels']
>;

export type VehicleModelsSelectScalar = {
  id?: boolean;
  name?: boolean;
  type?: boolean;
  coverImageUrl?: boolean;
  batteryRange?: boolean;
  chargingTime?: boolean;
  erpVehicleModelId?: boolean;
  createdAt?: boolean;
};

export type VehicleModelsOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'name'
  | 'type'
  | 'coverImageUrl'
  | 'batteryRange'
  | 'chargingTime'
  | 'erpVehicleModelId'
  | 'createdAt',
  ExtArgs['result']['vehicleModels']
>;
export type VehicleModelsInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  vehicleVideos?: boolean | Prisma.VehicleModels$vehicleVideosArgs<ExtArgs>;
  vehicleDocuments?:
    | boolean
    | Prisma.VehicleModels$vehicleDocumentsArgs<ExtArgs>;
  vehicleGuidelines?:
    | boolean
    | Prisma.VehicleModels$vehicleGuidelinesArgs<ExtArgs>;
  AssignedVehicles?:
    | boolean
    | Prisma.VehicleModels$AssignedVehiclesArgs<ExtArgs>;
  _count?: boolean | Prisma.VehicleModelsCountOutputTypeDefaultArgs<ExtArgs>;
};
export type VehicleModelsIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};
export type VehicleModelsIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};

export type $VehicleModelsPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'VehicleModels';
  objects: {
    vehicleVideos: Prisma.$VehicleVideosPayload<ExtArgs>[];
    vehicleDocuments: Prisma.$VehicleDocumentsPayload<ExtArgs>[];
    vehicleGuidelines: Prisma.$VehicleGuidelinesPayload<ExtArgs>[];
    AssignedVehicles: Prisma.$AssignedVehiclesPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      name: string;
      type: string;
      coverImageUrl: string;
      batteryRange: string;
      chargingTime: string;
      erpVehicleModelId: number;
      createdAt: Date;
    },
    ExtArgs['result']['vehicleModels']
  >;
  composites: {};
};

export type VehicleModelsGetPayload<
  S extends boolean | null | undefined | VehicleModelsDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$VehicleModelsPayload, S>;

export type VehicleModelsCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  VehicleModelsFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit'
> & {
  select?: VehicleModelsCountAggregateInputType | true;
};

export interface VehicleModelsDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['VehicleModels'];
    meta: { name: 'VehicleModels' };
  };
  /**
   * Find zero or one VehicleModels that matches the filter.
   * @param {VehicleModelsFindUniqueArgs} args - Arguments to find a VehicleModels
   * @example
   * // Get one VehicleModels
   * const vehicleModels = await prisma.vehicleModels.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends VehicleModelsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, VehicleModelsFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one VehicleModels that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {VehicleModelsFindUniqueOrThrowArgs} args - Arguments to find a VehicleModels
   * @example
   * // Get one VehicleModels
   * const vehicleModels = await prisma.vehicleModels.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends VehicleModelsFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, VehicleModelsFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first VehicleModels that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleModelsFindFirstArgs} args - Arguments to find a VehicleModels
   * @example
   * // Get one VehicleModels
   * const vehicleModels = await prisma.vehicleModels.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends VehicleModelsFindFirstArgs>(
    args?: Prisma.SelectSubset<T, VehicleModelsFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first VehicleModels that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleModelsFindFirstOrThrowArgs} args - Arguments to find a VehicleModels
   * @example
   * // Get one VehicleModels
   * const vehicleModels = await prisma.vehicleModels.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends VehicleModelsFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, VehicleModelsFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more VehicleModels that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleModelsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all VehicleModels
   * const vehicleModels = await prisma.vehicleModels.findMany()
   *
   * // Get first 10 VehicleModels
   * const vehicleModels = await prisma.vehicleModels.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const vehicleModelsWithIdOnly = await prisma.vehicleModels.findMany({ select: { id: true } })
   *
   */
  findMany<T extends VehicleModelsFindManyArgs>(
    args?: Prisma.SelectSubset<T, VehicleModelsFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a VehicleModels.
   * @param {VehicleModelsCreateArgs} args - Arguments to create a VehicleModels.
   * @example
   * // Create one VehicleModels
   * const VehicleModels = await prisma.vehicleModels.create({
   *   data: {
   *     // ... data to create a VehicleModels
   *   }
   * })
   *
   */
  create<T extends VehicleModelsCreateArgs>(
    args: Prisma.SelectSubset<T, VehicleModelsCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many VehicleModels.
   * @param {VehicleModelsCreateManyArgs} args - Arguments to create many VehicleModels.
   * @example
   * // Create many VehicleModels
   * const vehicleModels = await prisma.vehicleModels.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends VehicleModelsCreateManyArgs>(
    args?: Prisma.SelectSubset<T, VehicleModelsCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many VehicleModels and returns the data saved in the database.
   * @param {VehicleModelsCreateManyAndReturnArgs} args - Arguments to create many VehicleModels.
   * @example
   * // Create many VehicleModels
   * const vehicleModels = await prisma.vehicleModels.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many VehicleModels and only return the `id`
   * const vehicleModelsWithIdOnly = await prisma.vehicleModels.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends VehicleModelsCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      VehicleModelsCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a VehicleModels.
   * @param {VehicleModelsDeleteArgs} args - Arguments to delete one VehicleModels.
   * @example
   * // Delete one VehicleModels
   * const VehicleModels = await prisma.vehicleModels.delete({
   *   where: {
   *     // ... filter to delete one VehicleModels
   *   }
   * })
   *
   */
  delete<T extends VehicleModelsDeleteArgs>(
    args: Prisma.SelectSubset<T, VehicleModelsDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one VehicleModels.
   * @param {VehicleModelsUpdateArgs} args - Arguments to update one VehicleModels.
   * @example
   * // Update one VehicleModels
   * const vehicleModels = await prisma.vehicleModels.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends VehicleModelsUpdateArgs>(
    args: Prisma.SelectSubset<T, VehicleModelsUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more VehicleModels.
   * @param {VehicleModelsDeleteManyArgs} args - Arguments to filter VehicleModels to delete.
   * @example
   * // Delete a few VehicleModels
   * const { count } = await prisma.vehicleModels.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends VehicleModelsDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, VehicleModelsDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more VehicleModels.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleModelsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many VehicleModels
   * const vehicleModels = await prisma.vehicleModels.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends VehicleModelsUpdateManyArgs>(
    args: Prisma.SelectSubset<T, VehicleModelsUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more VehicleModels and returns the data updated in the database.
   * @param {VehicleModelsUpdateManyAndReturnArgs} args - Arguments to update many VehicleModels.
   * @example
   * // Update many VehicleModels
   * const vehicleModels = await prisma.vehicleModels.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more VehicleModels and only return the `id`
   * const vehicleModelsWithIdOnly = await prisma.vehicleModels.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends VehicleModelsUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, VehicleModelsUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one VehicleModels.
   * @param {VehicleModelsUpsertArgs} args - Arguments to update or create a VehicleModels.
   * @example
   * // Update or create a VehicleModels
   * const vehicleModels = await prisma.vehicleModels.upsert({
   *   create: {
   *     // ... data to create a VehicleModels
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the VehicleModels we want to update
   *   }
   * })
   */
  upsert<T extends VehicleModelsUpsertArgs>(
    args: Prisma.SelectSubset<T, VehicleModelsUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleModelsPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of VehicleModels.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleModelsCountArgs} args - Arguments to filter VehicleModels to count.
   * @example
   * // Count the number of VehicleModels
   * const count = await prisma.vehicleModels.count({
   *   where: {
   *     // ... the filter for the VehicleModels we want to count
   *   }
   * })
   **/
  count<T extends VehicleModelsCountArgs>(
    args?: Prisma.Subset<T, VehicleModelsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            VehicleModelsCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a VehicleModels.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleModelsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends VehicleModelsAggregateArgs>(
    args: Prisma.Subset<T, VehicleModelsAggregateArgs>,
  ): Prisma.PrismaPromise<GetVehicleModelsAggregateType<T>>;

  /**
   * Group by VehicleModels.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleModelsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends VehicleModelsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: VehicleModelsGroupByArgs['orderBy'] }
      : { orderBy?: VehicleModelsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, VehicleModelsGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetVehicleModelsGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the VehicleModels model
   */
  readonly fields: VehicleModelsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for VehicleModels.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__VehicleModelsClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  vehicleVideos<T extends Prisma.VehicleModels$vehicleVideosArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.VehicleModels$vehicleVideosArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$VehicleVideosPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  vehicleDocuments<
    T extends Prisma.VehicleModels$vehicleDocumentsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.VehicleModels$vehicleDocumentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$VehicleDocumentsPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  vehicleGuidelines<
    T extends Prisma.VehicleModels$vehicleGuidelinesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.VehicleModels$vehicleGuidelinesArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$VehicleGuidelinesPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  AssignedVehicles<
    T extends Prisma.VehicleModels$AssignedVehiclesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.VehicleModels$AssignedVehiclesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AssignedVehiclesPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the VehicleModels model
 */
export interface VehicleModelsFieldRefs {
  readonly id: Prisma.FieldRef<'VehicleModels', 'String'>;
  readonly name: Prisma.FieldRef<'VehicleModels', 'String'>;
  readonly type: Prisma.FieldRef<'VehicleModels', 'String'>;
  readonly coverImageUrl: Prisma.FieldRef<'VehicleModels', 'String'>;
  readonly batteryRange: Prisma.FieldRef<'VehicleModels', 'String'>;
  readonly chargingTime: Prisma.FieldRef<'VehicleModels', 'String'>;
  readonly erpVehicleModelId: Prisma.FieldRef<'VehicleModels', 'Int'>;
  readonly createdAt: Prisma.FieldRef<'VehicleModels', 'DateTime'>;
}

// Custom InputTypes
/**
 * VehicleModels findUnique
 */
export type VehicleModelsFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleModels to fetch.
   */
  where: Prisma.VehicleModelsWhereUniqueInput;
};

/**
 * VehicleModels findUniqueOrThrow
 */
export type VehicleModelsFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleModels to fetch.
   */
  where: Prisma.VehicleModelsWhereUniqueInput;
};

/**
 * VehicleModels findFirst
 */
export type VehicleModelsFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleModels to fetch.
   */
  where?: Prisma.VehicleModelsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VehicleModels to fetch.
   */
  orderBy?:
    | Prisma.VehicleModelsOrderByWithRelationInput
    | Prisma.VehicleModelsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for VehicleModels.
   */
  cursor?: Prisma.VehicleModelsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VehicleModels from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VehicleModels.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of VehicleModels.
   */
  distinct?:
    | Prisma.VehicleModelsScalarFieldEnum
    | Prisma.VehicleModelsScalarFieldEnum[];
};

/**
 * VehicleModels findFirstOrThrow
 */
export type VehicleModelsFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleModels to fetch.
   */
  where?: Prisma.VehicleModelsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VehicleModels to fetch.
   */
  orderBy?:
    | Prisma.VehicleModelsOrderByWithRelationInput
    | Prisma.VehicleModelsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for VehicleModels.
   */
  cursor?: Prisma.VehicleModelsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VehicleModels from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VehicleModels.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of VehicleModels.
   */
  distinct?:
    | Prisma.VehicleModelsScalarFieldEnum
    | Prisma.VehicleModelsScalarFieldEnum[];
};

/**
 * VehicleModels findMany
 */
export type VehicleModelsFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleModels to fetch.
   */
  where?: Prisma.VehicleModelsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VehicleModels to fetch.
   */
  orderBy?:
    | Prisma.VehicleModelsOrderByWithRelationInput
    | Prisma.VehicleModelsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing VehicleModels.
   */
  cursor?: Prisma.VehicleModelsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VehicleModels from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VehicleModels.
   */
  skip?: number;
  distinct?:
    | Prisma.VehicleModelsScalarFieldEnum
    | Prisma.VehicleModelsScalarFieldEnum[];
};

/**
 * VehicleModels create
 */
export type VehicleModelsCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * The data needed to create a VehicleModels.
   */
  data: Prisma.XOR<
    Prisma.VehicleModelsCreateInput,
    Prisma.VehicleModelsUncheckedCreateInput
  >;
};

/**
 * VehicleModels createMany
 */
export type VehicleModelsCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many VehicleModels.
   */
  data:
    | Prisma.VehicleModelsCreateManyInput
    | Prisma.VehicleModelsCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * VehicleModels createManyAndReturn
 */
export type VehicleModelsCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * The data used to create many VehicleModels.
   */
  data:
    | Prisma.VehicleModelsCreateManyInput
    | Prisma.VehicleModelsCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * VehicleModels update
 */
export type VehicleModelsUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * The data needed to update a VehicleModels.
   */
  data: Prisma.XOR<
    Prisma.VehicleModelsUpdateInput,
    Prisma.VehicleModelsUncheckedUpdateInput
  >;
  /**
   * Choose, which VehicleModels to update.
   */
  where: Prisma.VehicleModelsWhereUniqueInput;
};

/**
 * VehicleModels updateMany
 */
export type VehicleModelsUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update VehicleModels.
   */
  data: Prisma.XOR<
    Prisma.VehicleModelsUpdateManyMutationInput,
    Prisma.VehicleModelsUncheckedUpdateManyInput
  >;
  /**
   * Filter which VehicleModels to update
   */
  where?: Prisma.VehicleModelsWhereInput;
  /**
   * Limit how many VehicleModels to update.
   */
  limit?: number;
};

/**
 * VehicleModels updateManyAndReturn
 */
export type VehicleModelsUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * The data used to update VehicleModels.
   */
  data: Prisma.XOR<
    Prisma.VehicleModelsUpdateManyMutationInput,
    Prisma.VehicleModelsUncheckedUpdateManyInput
  >;
  /**
   * Filter which VehicleModels to update
   */
  where?: Prisma.VehicleModelsWhereInput;
  /**
   * Limit how many VehicleModels to update.
   */
  limit?: number;
};

/**
 * VehicleModels upsert
 */
export type VehicleModelsUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * The filter to search for the VehicleModels to update in case it exists.
   */
  where: Prisma.VehicleModelsWhereUniqueInput;
  /**
   * In case the VehicleModels found by the `where` argument doesn't exist, create a new VehicleModels with this data.
   */
  create: Prisma.XOR<
    Prisma.VehicleModelsCreateInput,
    Prisma.VehicleModelsUncheckedCreateInput
  >;
  /**
   * In case the VehicleModels was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.VehicleModelsUpdateInput,
    Prisma.VehicleModelsUncheckedUpdateInput
  >;
};

/**
 * VehicleModels delete
 */
export type VehicleModelsDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
  /**
   * Filter which VehicleModels to delete.
   */
  where: Prisma.VehicleModelsWhereUniqueInput;
};

/**
 * VehicleModels deleteMany
 */
export type VehicleModelsDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which VehicleModels to delete
   */
  where?: Prisma.VehicleModelsWhereInput;
  /**
   * Limit how many VehicleModels to delete.
   */
  limit?: number;
};

/**
 * VehicleModels.vehicleVideos
 */
export type VehicleModels$vehicleVideosArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleVideos
   */
  select?: Prisma.VehicleVideosSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleVideos
   */
  omit?: Prisma.VehicleVideosOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleVideosInclude<ExtArgs> | null;
  where?: Prisma.VehicleVideosWhereInput;
  orderBy?:
    | Prisma.VehicleVideosOrderByWithRelationInput
    | Prisma.VehicleVideosOrderByWithRelationInput[];
  cursor?: Prisma.VehicleVideosWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.VehicleVideosScalarFieldEnum
    | Prisma.VehicleVideosScalarFieldEnum[];
};

/**
 * VehicleModels.vehicleDocuments
 */
export type VehicleModels$vehicleDocumentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleDocuments
   */
  select?: Prisma.VehicleDocumentsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleDocuments
   */
  omit?: Prisma.VehicleDocumentsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleDocumentsInclude<ExtArgs> | null;
  where?: Prisma.VehicleDocumentsWhereInput;
  orderBy?:
    | Prisma.VehicleDocumentsOrderByWithRelationInput
    | Prisma.VehicleDocumentsOrderByWithRelationInput[];
  cursor?: Prisma.VehicleDocumentsWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.VehicleDocumentsScalarFieldEnum
    | Prisma.VehicleDocumentsScalarFieldEnum[];
};

/**
 * VehicleModels.vehicleGuidelines
 */
export type VehicleModels$vehicleGuidelinesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  where?: Prisma.VehicleGuidelinesWhereInput;
  orderBy?:
    | Prisma.VehicleGuidelinesOrderByWithRelationInput
    | Prisma.VehicleGuidelinesOrderByWithRelationInput[];
  cursor?: Prisma.VehicleGuidelinesWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.VehicleGuidelinesScalarFieldEnum
    | Prisma.VehicleGuidelinesScalarFieldEnum[];
};

/**
 * VehicleModels.AssignedVehicles
 */
export type VehicleModels$AssignedVehiclesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AssignedVehicles
   */
  select?: Prisma.AssignedVehiclesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AssignedVehicles
   */
  omit?: Prisma.AssignedVehiclesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AssignedVehiclesInclude<ExtArgs> | null;
  where?: Prisma.AssignedVehiclesWhereInput;
  orderBy?:
    | Prisma.AssignedVehiclesOrderByWithRelationInput
    | Prisma.AssignedVehiclesOrderByWithRelationInput[];
  cursor?: Prisma.AssignedVehiclesWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AssignedVehiclesScalarFieldEnum
    | Prisma.AssignedVehiclesScalarFieldEnum[];
};

/**
 * VehicleModels without action
 */
export type VehicleModelsDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleModels
   */
  select?: Prisma.VehicleModelsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleModels
   */
  omit?: Prisma.VehicleModelsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleModelsInclude<ExtArgs> | null;
};
