/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `CustomerProfileQuestionOptions` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/library';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model CustomerProfileQuestionOptions
 *
 */
export type CustomerProfileQuestionOptionsModel =
  runtime.Types.Result.DefaultSelection<Prisma.$CustomerProfileQuestionOptionsPayload>;

export type AggregateCustomerProfileQuestionOptions = {
  _count: CustomerProfileQuestionOptionsCountAggregateOutputType | null;
  _avg: CustomerProfileQuestionOptionsAvgAggregateOutputType | null;
  _sum: CustomerProfileQuestionOptionsSumAggregateOutputType | null;
  _min: CustomerProfileQuestionOptionsMinAggregateOutputType | null;
  _max: CustomerProfileQuestionOptionsMaxAggregateOutputType | null;
};

export type CustomerProfileQuestionOptionsAvgAggregateOutputType = {
  optionOrderIndex: number | null;
};

export type CustomerProfileQuestionOptionsSumAggregateOutputType = {
  optionOrderIndex: number | null;
};

export type CustomerProfileQuestionOptionsMinAggregateOutputType = {
  id: string | null;
  optionText: string | null;
  optionOrderIndex: number | null;
  questionId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type CustomerProfileQuestionOptionsMaxAggregateOutputType = {
  id: string | null;
  optionText: string | null;
  optionOrderIndex: number | null;
  questionId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type CustomerProfileQuestionOptionsCountAggregateOutputType = {
  id: number;
  optionText: number;
  optionOrderIndex: number;
  questionId: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type CustomerProfileQuestionOptionsAvgAggregateInputType = {
  optionOrderIndex?: true;
};

export type CustomerProfileQuestionOptionsSumAggregateInputType = {
  optionOrderIndex?: true;
};

export type CustomerProfileQuestionOptionsMinAggregateInputType = {
  id?: true;
  optionText?: true;
  optionOrderIndex?: true;
  questionId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type CustomerProfileQuestionOptionsMaxAggregateInputType = {
  id?: true;
  optionText?: true;
  optionOrderIndex?: true;
  questionId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type CustomerProfileQuestionOptionsCountAggregateInputType = {
  id?: true;
  optionText?: true;
  optionOrderIndex?: true;
  questionId?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type CustomerProfileQuestionOptionsAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which CustomerProfileQuestionOptions to aggregate.
   */
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CustomerProfileQuestionOptions to fetch.
   */
  orderBy?:
    | Prisma.CustomerProfileQuestionOptionsOrderByWithRelationInput
    | Prisma.CustomerProfileQuestionOptionsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CustomerProfileQuestionOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CustomerProfileQuestionOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned CustomerProfileQuestionOptions
   **/
  _count?: true | CustomerProfileQuestionOptionsCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: CustomerProfileQuestionOptionsAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: CustomerProfileQuestionOptionsSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: CustomerProfileQuestionOptionsMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: CustomerProfileQuestionOptionsMaxAggregateInputType;
};

export type GetCustomerProfileQuestionOptionsAggregateType<
  T extends CustomerProfileQuestionOptionsAggregateArgs,
> = {
  [P in keyof T & keyof AggregateCustomerProfileQuestionOptions]: P extends
    | '_count'
    | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCustomerProfileQuestionOptions[P]>
    : Prisma.GetScalarType<T[P], AggregateCustomerProfileQuestionOptions[P]>;
};

export type CustomerProfileQuestionOptionsGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  orderBy?:
    | Prisma.CustomerProfileQuestionOptionsOrderByWithAggregationInput
    | Prisma.CustomerProfileQuestionOptionsOrderByWithAggregationInput[];
  by:
    | Prisma.CustomerProfileQuestionOptionsScalarFieldEnum[]
    | Prisma.CustomerProfileQuestionOptionsScalarFieldEnum;
  having?: Prisma.CustomerProfileQuestionOptionsScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: CustomerProfileQuestionOptionsCountAggregateInputType | true;
  _avg?: CustomerProfileQuestionOptionsAvgAggregateInputType;
  _sum?: CustomerProfileQuestionOptionsSumAggregateInputType;
  _min?: CustomerProfileQuestionOptionsMinAggregateInputType;
  _max?: CustomerProfileQuestionOptionsMaxAggregateInputType;
};

export type CustomerProfileQuestionOptionsGroupByOutputType = {
  id: string;
  optionText: string;
  optionOrderIndex: number;
  questionId: string;
  createdAt: Date;
  updatedAt: Date;
  _count: CustomerProfileQuestionOptionsCountAggregateOutputType | null;
  _avg: CustomerProfileQuestionOptionsAvgAggregateOutputType | null;
  _sum: CustomerProfileQuestionOptionsSumAggregateOutputType | null;
  _min: CustomerProfileQuestionOptionsMinAggregateOutputType | null;
  _max: CustomerProfileQuestionOptionsMaxAggregateOutputType | null;
};

type GetCustomerProfileQuestionOptionsGroupByPayload<
  T extends CustomerProfileQuestionOptionsGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<
      CustomerProfileQuestionOptionsGroupByOutputType,
      T['by']
    > & {
      [P in keyof T &
        keyof CustomerProfileQuestionOptionsGroupByOutputType]: P extends '_count'
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<
              T[P],
              CustomerProfileQuestionOptionsGroupByOutputType[P]
            >
        : Prisma.GetScalarType<
            T[P],
            CustomerProfileQuestionOptionsGroupByOutputType[P]
          >;
    }
  >
>;

export type CustomerProfileQuestionOptionsWhereInput = {
  AND?:
    | Prisma.CustomerProfileQuestionOptionsWhereInput
    | Prisma.CustomerProfileQuestionOptionsWhereInput[];
  OR?: Prisma.CustomerProfileQuestionOptionsWhereInput[];
  NOT?:
    | Prisma.CustomerProfileQuestionOptionsWhereInput
    | Prisma.CustomerProfileQuestionOptionsWhereInput[];
  id?: Prisma.UuidFilter<'CustomerProfileQuestionOptions'> | string;
  optionText?: Prisma.StringFilter<'CustomerProfileQuestionOptions'> | string;
  optionOrderIndex?:
    | Prisma.IntFilter<'CustomerProfileQuestionOptions'>
    | number;
  questionId?: Prisma.UuidFilter<'CustomerProfileQuestionOptions'> | string;
  createdAt?:
    | Prisma.DateTimeFilter<'CustomerProfileQuestionOptions'>
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeFilter<'CustomerProfileQuestionOptions'>
    | Date
    | string;
  question?: Prisma.XOR<
    Prisma.CustomerProfileQuestionScalarRelationFilter,
    Prisma.CustomerProfileQuestionWhereInput
  >;
  answers?: Prisma.CustomerProfileAnswersListRelationFilter;
};

export type CustomerProfileQuestionOptionsOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  optionText?: Prisma.SortOrder;
  optionOrderIndex?: Prisma.SortOrder;
  questionId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  question?: Prisma.CustomerProfileQuestionOrderByWithRelationInput;
  answers?: Prisma.CustomerProfileAnswersOrderByRelationAggregateInput;
};

export type CustomerProfileQuestionOptionsWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?:
      | Prisma.CustomerProfileQuestionOptionsWhereInput
      | Prisma.CustomerProfileQuestionOptionsWhereInput[];
    OR?: Prisma.CustomerProfileQuestionOptionsWhereInput[];
    NOT?:
      | Prisma.CustomerProfileQuestionOptionsWhereInput
      | Prisma.CustomerProfileQuestionOptionsWhereInput[];
    optionText?: Prisma.StringFilter<'CustomerProfileQuestionOptions'> | string;
    optionOrderIndex?:
      | Prisma.IntFilter<'CustomerProfileQuestionOptions'>
      | number;
    questionId?: Prisma.UuidFilter<'CustomerProfileQuestionOptions'> | string;
    createdAt?:
      | Prisma.DateTimeFilter<'CustomerProfileQuestionOptions'>
      | Date
      | string;
    updatedAt?:
      | Prisma.DateTimeFilter<'CustomerProfileQuestionOptions'>
      | Date
      | string;
    question?: Prisma.XOR<
      Prisma.CustomerProfileQuestionScalarRelationFilter,
      Prisma.CustomerProfileQuestionWhereInput
    >;
    answers?: Prisma.CustomerProfileAnswersListRelationFilter;
  },
  'id'
>;

export type CustomerProfileQuestionOptionsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  optionText?: Prisma.SortOrder;
  optionOrderIndex?: Prisma.SortOrder;
  questionId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.CustomerProfileQuestionOptionsCountOrderByAggregateInput;
  _avg?: Prisma.CustomerProfileQuestionOptionsAvgOrderByAggregateInput;
  _max?: Prisma.CustomerProfileQuestionOptionsMaxOrderByAggregateInput;
  _min?: Prisma.CustomerProfileQuestionOptionsMinOrderByAggregateInput;
  _sum?: Prisma.CustomerProfileQuestionOptionsSumOrderByAggregateInput;
};

export type CustomerProfileQuestionOptionsScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.CustomerProfileQuestionOptionsScalarWhereWithAggregatesInput
    | Prisma.CustomerProfileQuestionOptionsScalarWhereWithAggregatesInput[];
  OR?: Prisma.CustomerProfileQuestionOptionsScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.CustomerProfileQuestionOptionsScalarWhereWithAggregatesInput
    | Prisma.CustomerProfileQuestionOptionsScalarWhereWithAggregatesInput[];
  id?:
    | Prisma.UuidWithAggregatesFilter<'CustomerProfileQuestionOptions'>
    | string;
  optionText?:
    | Prisma.StringWithAggregatesFilter<'CustomerProfileQuestionOptions'>
    | string;
  optionOrderIndex?:
    | Prisma.IntWithAggregatesFilter<'CustomerProfileQuestionOptions'>
    | number;
  questionId?:
    | Prisma.UuidWithAggregatesFilter<'CustomerProfileQuestionOptions'>
    | string;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<'CustomerProfileQuestionOptions'>
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<'CustomerProfileQuestionOptions'>
    | Date
    | string;
};

export type CustomerProfileQuestionOptionsCreateInput = {
  id?: string;
  optionText: string;
  optionOrderIndex: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  question: Prisma.CustomerProfileQuestionCreateNestedOneWithoutQuestionOptionsInput;
  answers?: Prisma.CustomerProfileAnswersCreateNestedManyWithoutOptionInput;
};

export type CustomerProfileQuestionOptionsUncheckedCreateInput = {
  id?: string;
  optionText: string;
  optionOrderIndex: number;
  questionId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  answers?: Prisma.CustomerProfileAnswersUncheckedCreateNestedManyWithoutOptionInput;
};

export type CustomerProfileQuestionOptionsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  optionText?: Prisma.StringFieldUpdateOperationsInput | string;
  optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  question?: Prisma.CustomerProfileQuestionUpdateOneRequiredWithoutQuestionOptionsNestedInput;
  answers?: Prisma.CustomerProfileAnswersUpdateManyWithoutOptionNestedInput;
};

export type CustomerProfileQuestionOptionsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  optionText?: Prisma.StringFieldUpdateOperationsInput | string;
  optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
  questionId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  answers?: Prisma.CustomerProfileAnswersUncheckedUpdateManyWithoutOptionNestedInput;
};

export type CustomerProfileQuestionOptionsCreateManyInput = {
  id?: string;
  optionText: string;
  optionOrderIndex: number;
  questionId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CustomerProfileQuestionOptionsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  optionText?: Prisma.StringFieldUpdateOperationsInput | string;
  optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CustomerProfileQuestionOptionsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  optionText?: Prisma.StringFieldUpdateOperationsInput | string;
  optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
  questionId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CustomerProfileQuestionOptionsListRelationFilter = {
  every?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  some?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  none?: Prisma.CustomerProfileQuestionOptionsWhereInput;
};

export type CustomerProfileQuestionOptionsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type CustomerProfileQuestionOptionsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  optionText?: Prisma.SortOrder;
  optionOrderIndex?: Prisma.SortOrder;
  questionId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CustomerProfileQuestionOptionsAvgOrderByAggregateInput = {
  optionOrderIndex?: Prisma.SortOrder;
};

export type CustomerProfileQuestionOptionsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  optionText?: Prisma.SortOrder;
  optionOrderIndex?: Prisma.SortOrder;
  questionId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CustomerProfileQuestionOptionsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  optionText?: Prisma.SortOrder;
  optionOrderIndex?: Prisma.SortOrder;
  questionId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CustomerProfileQuestionOptionsSumOrderByAggregateInput = {
  optionOrderIndex?: Prisma.SortOrder;
};

export type CustomerProfileQuestionOptionsNullableScalarRelationFilter = {
  is?: Prisma.CustomerProfileQuestionOptionsWhereInput | null;
  isNot?: Prisma.CustomerProfileQuestionOptionsWhereInput | null;
};

export type CustomerProfileQuestionOptionsCreateNestedManyWithoutQuestionInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput,
          Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput
        >
      | Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput[]
      | Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput[];
    connectOrCreate?:
      | Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput[];
    createMany?: Prisma.CustomerProfileQuestionOptionsCreateManyQuestionInputEnvelope;
    connect?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
  };

export type CustomerProfileQuestionOptionsUncheckedCreateNestedManyWithoutQuestionInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput,
          Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput
        >
      | Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput[]
      | Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput[];
    connectOrCreate?:
      | Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput[];
    createMany?: Prisma.CustomerProfileQuestionOptionsCreateManyQuestionInputEnvelope;
    connect?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
  };

export type CustomerProfileQuestionOptionsUpdateManyWithoutQuestionNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput,
          Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput
        >
      | Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput[]
      | Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput[];
    connectOrCreate?:
      | Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput[];
    upsert?:
      | Prisma.CustomerProfileQuestionOptionsUpsertWithWhereUniqueWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsUpsertWithWhereUniqueWithoutQuestionInput[];
    createMany?: Prisma.CustomerProfileQuestionOptionsCreateManyQuestionInputEnvelope;
    set?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
    disconnect?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
    delete?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
    connect?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
    update?:
      | Prisma.CustomerProfileQuestionOptionsUpdateWithWhereUniqueWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsUpdateWithWhereUniqueWithoutQuestionInput[];
    updateMany?:
      | Prisma.CustomerProfileQuestionOptionsUpdateManyWithWhereWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsUpdateManyWithWhereWithoutQuestionInput[];
    deleteMany?:
      | Prisma.CustomerProfileQuestionOptionsScalarWhereInput
      | Prisma.CustomerProfileQuestionOptionsScalarWhereInput[];
  };

export type CustomerProfileQuestionOptionsUncheckedUpdateManyWithoutQuestionNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput,
          Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput
        >
      | Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput[]
      | Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput[];
    connectOrCreate?:
      | Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput[];
    upsert?:
      | Prisma.CustomerProfileQuestionOptionsUpsertWithWhereUniqueWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsUpsertWithWhereUniqueWithoutQuestionInput[];
    createMany?: Prisma.CustomerProfileQuestionOptionsCreateManyQuestionInputEnvelope;
    set?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
    disconnect?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
    delete?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
    connect?:
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput
      | Prisma.CustomerProfileQuestionOptionsWhereUniqueInput[];
    update?:
      | Prisma.CustomerProfileQuestionOptionsUpdateWithWhereUniqueWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsUpdateWithWhereUniqueWithoutQuestionInput[];
    updateMany?:
      | Prisma.CustomerProfileQuestionOptionsUpdateManyWithWhereWithoutQuestionInput
      | Prisma.CustomerProfileQuestionOptionsUpdateManyWithWhereWithoutQuestionInput[];
    deleteMany?:
      | Prisma.CustomerProfileQuestionOptionsScalarWhereInput
      | Prisma.CustomerProfileQuestionOptionsScalarWhereInput[];
  };

export type CustomerProfileQuestionOptionsCreateNestedOneWithoutAnswersInput = {
  create?: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsCreateWithoutAnswersInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutAnswersInput
  >;
  connectOrCreate?: Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutAnswersInput;
  connect?: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
};

export type CustomerProfileQuestionOptionsUpdateOneWithoutAnswersNestedInput = {
  create?: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsCreateWithoutAnswersInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutAnswersInput
  >;
  connectOrCreate?: Prisma.CustomerProfileQuestionOptionsCreateOrConnectWithoutAnswersInput;
  upsert?: Prisma.CustomerProfileQuestionOptionsUpsertWithoutAnswersInput;
  disconnect?: Prisma.CustomerProfileQuestionOptionsWhereInput | boolean;
  delete?: Prisma.CustomerProfileQuestionOptionsWhereInput | boolean;
  connect?: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CustomerProfileQuestionOptionsUpdateToOneWithWhereWithoutAnswersInput,
      Prisma.CustomerProfileQuestionOptionsUpdateWithoutAnswersInput
    >,
    Prisma.CustomerProfileQuestionOptionsUncheckedUpdateWithoutAnswersInput
  >;
};

export type CustomerProfileQuestionOptionsCreateWithoutQuestionInput = {
  id?: string;
  optionText: string;
  optionOrderIndex: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  answers?: Prisma.CustomerProfileAnswersCreateNestedManyWithoutOptionInput;
};

export type CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput =
  {
    id?: string;
    optionText: string;
    optionOrderIndex: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    answers?: Prisma.CustomerProfileAnswersUncheckedCreateNestedManyWithoutOptionInput;
  };

export type CustomerProfileQuestionOptionsCreateOrConnectWithoutQuestionInput =
  {
    where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
    create: Prisma.XOR<
      Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput,
      Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput
    >;
  };

export type CustomerProfileQuestionOptionsCreateManyQuestionInputEnvelope = {
  data:
    | Prisma.CustomerProfileQuestionOptionsCreateManyQuestionInput
    | Prisma.CustomerProfileQuestionOptionsCreateManyQuestionInput[];
  skipDuplicates?: boolean;
};

export type CustomerProfileQuestionOptionsUpsertWithWhereUniqueWithoutQuestionInput =
  {
    where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
    update: Prisma.XOR<
      Prisma.CustomerProfileQuestionOptionsUpdateWithoutQuestionInput,
      Prisma.CustomerProfileQuestionOptionsUncheckedUpdateWithoutQuestionInput
    >;
    create: Prisma.XOR<
      Prisma.CustomerProfileQuestionOptionsCreateWithoutQuestionInput,
      Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutQuestionInput
    >;
  };

export type CustomerProfileQuestionOptionsUpdateWithWhereUniqueWithoutQuestionInput =
  {
    where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
    data: Prisma.XOR<
      Prisma.CustomerProfileQuestionOptionsUpdateWithoutQuestionInput,
      Prisma.CustomerProfileQuestionOptionsUncheckedUpdateWithoutQuestionInput
    >;
  };

export type CustomerProfileQuestionOptionsUpdateManyWithWhereWithoutQuestionInput =
  {
    where: Prisma.CustomerProfileQuestionOptionsScalarWhereInput;
    data: Prisma.XOR<
      Prisma.CustomerProfileQuestionOptionsUpdateManyMutationInput,
      Prisma.CustomerProfileQuestionOptionsUncheckedUpdateManyWithoutQuestionInput
    >;
  };

export type CustomerProfileQuestionOptionsScalarWhereInput = {
  AND?:
    | Prisma.CustomerProfileQuestionOptionsScalarWhereInput
    | Prisma.CustomerProfileQuestionOptionsScalarWhereInput[];
  OR?: Prisma.CustomerProfileQuestionOptionsScalarWhereInput[];
  NOT?:
    | Prisma.CustomerProfileQuestionOptionsScalarWhereInput
    | Prisma.CustomerProfileQuestionOptionsScalarWhereInput[];
  id?: Prisma.UuidFilter<'CustomerProfileQuestionOptions'> | string;
  optionText?: Prisma.StringFilter<'CustomerProfileQuestionOptions'> | string;
  optionOrderIndex?:
    | Prisma.IntFilter<'CustomerProfileQuestionOptions'>
    | number;
  questionId?: Prisma.UuidFilter<'CustomerProfileQuestionOptions'> | string;
  createdAt?:
    | Prisma.DateTimeFilter<'CustomerProfileQuestionOptions'>
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeFilter<'CustomerProfileQuestionOptions'>
    | Date
    | string;
};

export type CustomerProfileQuestionOptionsCreateWithoutAnswersInput = {
  id?: string;
  optionText: string;
  optionOrderIndex: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  question: Prisma.CustomerProfileQuestionCreateNestedOneWithoutQuestionOptionsInput;
};

export type CustomerProfileQuestionOptionsUncheckedCreateWithoutAnswersInput = {
  id?: string;
  optionText: string;
  optionOrderIndex: number;
  questionId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CustomerProfileQuestionOptionsCreateOrConnectWithoutAnswersInput = {
  where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsCreateWithoutAnswersInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutAnswersInput
  >;
};

export type CustomerProfileQuestionOptionsUpsertWithoutAnswersInput = {
  update: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsUpdateWithoutAnswersInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedUpdateWithoutAnswersInput
  >;
  create: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsCreateWithoutAnswersInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedCreateWithoutAnswersInput
  >;
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
};

export type CustomerProfileQuestionOptionsUpdateToOneWithWhereWithoutAnswersInput =
  {
    where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
    data: Prisma.XOR<
      Prisma.CustomerProfileQuestionOptionsUpdateWithoutAnswersInput,
      Prisma.CustomerProfileQuestionOptionsUncheckedUpdateWithoutAnswersInput
    >;
  };

export type CustomerProfileQuestionOptionsUpdateWithoutAnswersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  optionText?: Prisma.StringFieldUpdateOperationsInput | string;
  optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  question?: Prisma.CustomerProfileQuestionUpdateOneRequiredWithoutQuestionOptionsNestedInput;
};

export type CustomerProfileQuestionOptionsUncheckedUpdateWithoutAnswersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  optionText?: Prisma.StringFieldUpdateOperationsInput | string;
  optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
  questionId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CustomerProfileQuestionOptionsCreateManyQuestionInput = {
  id?: string;
  optionText: string;
  optionOrderIndex: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CustomerProfileQuestionOptionsUpdateWithoutQuestionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  optionText?: Prisma.StringFieldUpdateOperationsInput | string;
  optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  answers?: Prisma.CustomerProfileAnswersUpdateManyWithoutOptionNestedInput;
};

export type CustomerProfileQuestionOptionsUncheckedUpdateWithoutQuestionInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    optionText?: Prisma.StringFieldUpdateOperationsInput | string;
    optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    answers?: Prisma.CustomerProfileAnswersUncheckedUpdateManyWithoutOptionNestedInput;
  };

export type CustomerProfileQuestionOptionsUncheckedUpdateManyWithoutQuestionInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string;
    optionText?: Prisma.StringFieldUpdateOperationsInput | string;
    optionOrderIndex?: Prisma.IntFieldUpdateOperationsInput | number;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  };

/**
 * Count Type CustomerProfileQuestionOptionsCountOutputType
 */

export type CustomerProfileQuestionOptionsCountOutputType = {
  answers: number;
};

export type CustomerProfileQuestionOptionsCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  answers?:
    | boolean
    | CustomerProfileQuestionOptionsCountOutputTypeCountAnswersArgs;
};

/**
 * CustomerProfileQuestionOptionsCountOutputType without action
 */
export type CustomerProfileQuestionOptionsCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptionsCountOutputType
   */
  select?: Prisma.CustomerProfileQuestionOptionsCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * CustomerProfileQuestionOptionsCountOutputType without action
 */
export type CustomerProfileQuestionOptionsCountOutputTypeCountAnswersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CustomerProfileAnswersWhereInput;
};

export type CustomerProfileQuestionOptionsSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    optionText?: boolean;
    optionOrderIndex?: boolean;
    questionId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    question?: boolean | Prisma.CustomerProfileQuestionDefaultArgs<ExtArgs>;
    answers?:
      | boolean
      | Prisma.CustomerProfileQuestionOptions$answersArgs<ExtArgs>;
    _count?:
      | boolean
      | Prisma.CustomerProfileQuestionOptionsCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['customerProfileQuestionOptions']
>;

export type CustomerProfileQuestionOptionsSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    optionText?: boolean;
    optionOrderIndex?: boolean;
    questionId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    question?: boolean | Prisma.CustomerProfileQuestionDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['customerProfileQuestionOptions']
>;

export type CustomerProfileQuestionOptionsSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    optionText?: boolean;
    optionOrderIndex?: boolean;
    questionId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    question?: boolean | Prisma.CustomerProfileQuestionDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['customerProfileQuestionOptions']
>;

export type CustomerProfileQuestionOptionsSelectScalar = {
  id?: boolean;
  optionText?: boolean;
  optionOrderIndex?: boolean;
  questionId?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type CustomerProfileQuestionOptionsOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'optionText'
  | 'optionOrderIndex'
  | 'questionId'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['customerProfileQuestionOptions']
>;
export type CustomerProfileQuestionOptionsInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  question?: boolean | Prisma.CustomerProfileQuestionDefaultArgs<ExtArgs>;
  answers?:
    | boolean
    | Prisma.CustomerProfileQuestionOptions$answersArgs<ExtArgs>;
  _count?:
    | boolean
    | Prisma.CustomerProfileQuestionOptionsCountOutputTypeDefaultArgs<ExtArgs>;
};
export type CustomerProfileQuestionOptionsIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  question?: boolean | Prisma.CustomerProfileQuestionDefaultArgs<ExtArgs>;
};
export type CustomerProfileQuestionOptionsIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  question?: boolean | Prisma.CustomerProfileQuestionDefaultArgs<ExtArgs>;
};

export type $CustomerProfileQuestionOptionsPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'CustomerProfileQuestionOptions';
  objects: {
    question: Prisma.$CustomerProfileQuestionPayload<ExtArgs>;
    answers: Prisma.$CustomerProfileAnswersPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      optionText: string;
      optionOrderIndex: number;
      questionId: string;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs['result']['customerProfileQuestionOptions']
  >;
  composites: {};
};

export type CustomerProfileQuestionOptionsGetPayload<
  S extends
    | boolean
    | null
    | undefined
    | CustomerProfileQuestionOptionsDefaultArgs,
> = runtime.Types.Result.GetResult<
  Prisma.$CustomerProfileQuestionOptionsPayload,
  S
>;

export type CustomerProfileQuestionOptionsCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  CustomerProfileQuestionOptionsFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit'
> & {
  select?: CustomerProfileQuestionOptionsCountAggregateInputType | true;
};

export interface CustomerProfileQuestionOptionsDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['CustomerProfileQuestionOptions'];
    meta: { name: 'CustomerProfileQuestionOptions' };
  };
  /**
   * Find zero or one CustomerProfileQuestionOptions that matches the filter.
   * @param {CustomerProfileQuestionOptionsFindUniqueArgs} args - Arguments to find a CustomerProfileQuestionOptions
   * @example
   * // Get one CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends CustomerProfileQuestionOptionsFindUniqueArgs>(
    args: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsFindUniqueArgs<ExtArgs>
    >,
  ): Prisma.Prisma__CustomerProfileQuestionOptionsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one CustomerProfileQuestionOptions that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {CustomerProfileQuestionOptionsFindUniqueOrThrowArgs} args - Arguments to find a CustomerProfileQuestionOptions
   * @example
   * // Get one CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<
    T extends CustomerProfileQuestionOptionsFindUniqueOrThrowArgs,
  >(
    args: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsFindUniqueOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__CustomerProfileQuestionOptionsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first CustomerProfileQuestionOptions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CustomerProfileQuestionOptionsFindFirstArgs} args - Arguments to find a CustomerProfileQuestionOptions
   * @example
   * // Get one CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends CustomerProfileQuestionOptionsFindFirstArgs>(
    args?: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsFindFirstArgs<ExtArgs>
    >,
  ): Prisma.Prisma__CustomerProfileQuestionOptionsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first CustomerProfileQuestionOptions that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CustomerProfileQuestionOptionsFindFirstOrThrowArgs} args - Arguments to find a CustomerProfileQuestionOptions
   * @example
   * // Get one CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<
    T extends CustomerProfileQuestionOptionsFindFirstOrThrowArgs,
  >(
    args?: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsFindFirstOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__CustomerProfileQuestionOptionsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more CustomerProfileQuestionOptions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CustomerProfileQuestionOptionsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.findMany()
   *
   * // Get first 10 CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const customerProfileQuestionOptionsWithIdOnly = await prisma.customerProfileQuestionOptions.findMany({ select: { id: true } })
   *
   */
  findMany<T extends CustomerProfileQuestionOptionsFindManyArgs>(
    args?: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsFindManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a CustomerProfileQuestionOptions.
   * @param {CustomerProfileQuestionOptionsCreateArgs} args - Arguments to create a CustomerProfileQuestionOptions.
   * @example
   * // Create one CustomerProfileQuestionOptions
   * const CustomerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.create({
   *   data: {
   *     // ... data to create a CustomerProfileQuestionOptions
   *   }
   * })
   *
   */
  create<T extends CustomerProfileQuestionOptionsCreateArgs>(
    args: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsCreateArgs<ExtArgs>
    >,
  ): Prisma.Prisma__CustomerProfileQuestionOptionsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many CustomerProfileQuestionOptions.
   * @param {CustomerProfileQuestionOptionsCreateManyArgs} args - Arguments to create many CustomerProfileQuestionOptions.
   * @example
   * // Create many CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends CustomerProfileQuestionOptionsCreateManyArgs>(
    args?: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsCreateManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many CustomerProfileQuestionOptions and returns the data saved in the database.
   * @param {CustomerProfileQuestionOptionsCreateManyAndReturnArgs} args - Arguments to create many CustomerProfileQuestionOptions.
   * @example
   * // Create many CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many CustomerProfileQuestionOptions and only return the `id`
   * const customerProfileQuestionOptionsWithIdOnly = await prisma.customerProfileQuestionOptions.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<
    T extends CustomerProfileQuestionOptionsCreateManyAndReturnArgs,
  >(
    args?: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a CustomerProfileQuestionOptions.
   * @param {CustomerProfileQuestionOptionsDeleteArgs} args - Arguments to delete one CustomerProfileQuestionOptions.
   * @example
   * // Delete one CustomerProfileQuestionOptions
   * const CustomerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.delete({
   *   where: {
   *     // ... filter to delete one CustomerProfileQuestionOptions
   *   }
   * })
   *
   */
  delete<T extends CustomerProfileQuestionOptionsDeleteArgs>(
    args: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsDeleteArgs<ExtArgs>
    >,
  ): Prisma.Prisma__CustomerProfileQuestionOptionsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one CustomerProfileQuestionOptions.
   * @param {CustomerProfileQuestionOptionsUpdateArgs} args - Arguments to update one CustomerProfileQuestionOptions.
   * @example
   * // Update one CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends CustomerProfileQuestionOptionsUpdateArgs>(
    args: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsUpdateArgs<ExtArgs>
    >,
  ): Prisma.Prisma__CustomerProfileQuestionOptionsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more CustomerProfileQuestionOptions.
   * @param {CustomerProfileQuestionOptionsDeleteManyArgs} args - Arguments to filter CustomerProfileQuestionOptions to delete.
   * @example
   * // Delete a few CustomerProfileQuestionOptions
   * const { count } = await prisma.customerProfileQuestionOptions.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends CustomerProfileQuestionOptionsDeleteManyArgs>(
    args?: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsDeleteManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more CustomerProfileQuestionOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CustomerProfileQuestionOptionsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends CustomerProfileQuestionOptionsUpdateManyArgs>(
    args: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsUpdateManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more CustomerProfileQuestionOptions and returns the data updated in the database.
   * @param {CustomerProfileQuestionOptionsUpdateManyAndReturnArgs} args - Arguments to update many CustomerProfileQuestionOptions.
   * @example
   * // Update many CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more CustomerProfileQuestionOptions and only return the `id`
   * const customerProfileQuestionOptionsWithIdOnly = await prisma.customerProfileQuestionOptions.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<
    T extends CustomerProfileQuestionOptionsUpdateManyAndReturnArgs,
  >(
    args: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsUpdateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one CustomerProfileQuestionOptions.
   * @param {CustomerProfileQuestionOptionsUpsertArgs} args - Arguments to update or create a CustomerProfileQuestionOptions.
   * @example
   * // Update or create a CustomerProfileQuestionOptions
   * const customerProfileQuestionOptions = await prisma.customerProfileQuestionOptions.upsert({
   *   create: {
   *     // ... data to create a CustomerProfileQuestionOptions
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the CustomerProfileQuestionOptions we want to update
   *   }
   * })
   */
  upsert<T extends CustomerProfileQuestionOptionsUpsertArgs>(
    args: Prisma.SelectSubset<
      T,
      CustomerProfileQuestionOptionsUpsertArgs<ExtArgs>
    >,
  ): Prisma.Prisma__CustomerProfileQuestionOptionsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CustomerProfileQuestionOptionsPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of CustomerProfileQuestionOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CustomerProfileQuestionOptionsCountArgs} args - Arguments to filter CustomerProfileQuestionOptions to count.
   * @example
   * // Count the number of CustomerProfileQuestionOptions
   * const count = await prisma.customerProfileQuestionOptions.count({
   *   where: {
   *     // ... the filter for the CustomerProfileQuestionOptions we want to count
   *   }
   * })
   **/
  count<T extends CustomerProfileQuestionOptionsCountArgs>(
    args?: Prisma.Subset<T, CustomerProfileQuestionOptionsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            CustomerProfileQuestionOptionsCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a CustomerProfileQuestionOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CustomerProfileQuestionOptionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends CustomerProfileQuestionOptionsAggregateArgs>(
    args: Prisma.Subset<T, CustomerProfileQuestionOptionsAggregateArgs>,
  ): Prisma.PrismaPromise<GetCustomerProfileQuestionOptionsAggregateType<T>>;

  /**
   * Group by CustomerProfileQuestionOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CustomerProfileQuestionOptionsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends CustomerProfileQuestionOptionsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: CustomerProfileQuestionOptionsGroupByArgs['orderBy'] }
      : { orderBy?: CustomerProfileQuestionOptionsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      CustomerProfileQuestionOptionsGroupByArgs,
      OrderByArg
    > &
      InputErrors,
  ): {} extends InputErrors
    ? GetCustomerProfileQuestionOptionsGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the CustomerProfileQuestionOptions model
   */
  readonly fields: CustomerProfileQuestionOptionsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for CustomerProfileQuestionOptions.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__CustomerProfileQuestionOptionsClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  question<T extends Prisma.CustomerProfileQuestionDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.CustomerProfileQuestionDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__CustomerProfileQuestionClient<
    | runtime.Types.Result.GetResult<
        Prisma.$CustomerProfileQuestionPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  answers<
    T extends Prisma.CustomerProfileQuestionOptions$answersArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.CustomerProfileQuestionOptions$answersArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$CustomerProfileAnswersPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the CustomerProfileQuestionOptions model
 */
export interface CustomerProfileQuestionOptionsFieldRefs {
  readonly id: Prisma.FieldRef<'CustomerProfileQuestionOptions', 'String'>;
  readonly optionText: Prisma.FieldRef<
    'CustomerProfileQuestionOptions',
    'String'
  >;
  readonly optionOrderIndex: Prisma.FieldRef<
    'CustomerProfileQuestionOptions',
    'Int'
  >;
  readonly questionId: Prisma.FieldRef<
    'CustomerProfileQuestionOptions',
    'String'
  >;
  readonly createdAt: Prisma.FieldRef<
    'CustomerProfileQuestionOptions',
    'DateTime'
  >;
  readonly updatedAt: Prisma.FieldRef<
    'CustomerProfileQuestionOptions',
    'DateTime'
  >;
}

// Custom InputTypes
/**
 * CustomerProfileQuestionOptions findUnique
 */
export type CustomerProfileQuestionOptionsFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * Filter, which CustomerProfileQuestionOptions to fetch.
   */
  where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
};

/**
 * CustomerProfileQuestionOptions findUniqueOrThrow
 */
export type CustomerProfileQuestionOptionsFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * Filter, which CustomerProfileQuestionOptions to fetch.
   */
  where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
};

/**
 * CustomerProfileQuestionOptions findFirst
 */
export type CustomerProfileQuestionOptionsFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * Filter, which CustomerProfileQuestionOptions to fetch.
   */
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CustomerProfileQuestionOptions to fetch.
   */
  orderBy?:
    | Prisma.CustomerProfileQuestionOptionsOrderByWithRelationInput
    | Prisma.CustomerProfileQuestionOptionsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for CustomerProfileQuestionOptions.
   */
  cursor?: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CustomerProfileQuestionOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CustomerProfileQuestionOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of CustomerProfileQuestionOptions.
   */
  distinct?:
    | Prisma.CustomerProfileQuestionOptionsScalarFieldEnum
    | Prisma.CustomerProfileQuestionOptionsScalarFieldEnum[];
};

/**
 * CustomerProfileQuestionOptions findFirstOrThrow
 */
export type CustomerProfileQuestionOptionsFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * Filter, which CustomerProfileQuestionOptions to fetch.
   */
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CustomerProfileQuestionOptions to fetch.
   */
  orderBy?:
    | Prisma.CustomerProfileQuestionOptionsOrderByWithRelationInput
    | Prisma.CustomerProfileQuestionOptionsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for CustomerProfileQuestionOptions.
   */
  cursor?: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CustomerProfileQuestionOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CustomerProfileQuestionOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of CustomerProfileQuestionOptions.
   */
  distinct?:
    | Prisma.CustomerProfileQuestionOptionsScalarFieldEnum
    | Prisma.CustomerProfileQuestionOptionsScalarFieldEnum[];
};

/**
 * CustomerProfileQuestionOptions findMany
 */
export type CustomerProfileQuestionOptionsFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * Filter, which CustomerProfileQuestionOptions to fetch.
   */
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CustomerProfileQuestionOptions to fetch.
   */
  orderBy?:
    | Prisma.CustomerProfileQuestionOptionsOrderByWithRelationInput
    | Prisma.CustomerProfileQuestionOptionsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing CustomerProfileQuestionOptions.
   */
  cursor?: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CustomerProfileQuestionOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CustomerProfileQuestionOptions.
   */
  skip?: number;
  distinct?:
    | Prisma.CustomerProfileQuestionOptionsScalarFieldEnum
    | Prisma.CustomerProfileQuestionOptionsScalarFieldEnum[];
};

/**
 * CustomerProfileQuestionOptions create
 */
export type CustomerProfileQuestionOptionsCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * The data needed to create a CustomerProfileQuestionOptions.
   */
  data: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsCreateInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedCreateInput
  >;
};

/**
 * CustomerProfileQuestionOptions createMany
 */
export type CustomerProfileQuestionOptionsCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many CustomerProfileQuestionOptions.
   */
  data:
    | Prisma.CustomerProfileQuestionOptionsCreateManyInput
    | Prisma.CustomerProfileQuestionOptionsCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * CustomerProfileQuestionOptions createManyAndReturn
 */
export type CustomerProfileQuestionOptionsCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * The data used to create many CustomerProfileQuestionOptions.
   */
  data:
    | Prisma.CustomerProfileQuestionOptionsCreateManyInput
    | Prisma.CustomerProfileQuestionOptionsCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * CustomerProfileQuestionOptions update
 */
export type CustomerProfileQuestionOptionsUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * The data needed to update a CustomerProfileQuestionOptions.
   */
  data: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsUpdateInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedUpdateInput
  >;
  /**
   * Choose, which CustomerProfileQuestionOptions to update.
   */
  where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
};

/**
 * CustomerProfileQuestionOptions updateMany
 */
export type CustomerProfileQuestionOptionsUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update CustomerProfileQuestionOptions.
   */
  data: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsUpdateManyMutationInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedUpdateManyInput
  >;
  /**
   * Filter which CustomerProfileQuestionOptions to update
   */
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  /**
   * Limit how many CustomerProfileQuestionOptions to update.
   */
  limit?: number;
};

/**
 * CustomerProfileQuestionOptions updateManyAndReturn
 */
export type CustomerProfileQuestionOptionsUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * The data used to update CustomerProfileQuestionOptions.
   */
  data: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsUpdateManyMutationInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedUpdateManyInput
  >;
  /**
   * Filter which CustomerProfileQuestionOptions to update
   */
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  /**
   * Limit how many CustomerProfileQuestionOptions to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * CustomerProfileQuestionOptions upsert
 */
export type CustomerProfileQuestionOptionsUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * The filter to search for the CustomerProfileQuestionOptions to update in case it exists.
   */
  where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
  /**
   * In case the CustomerProfileQuestionOptions found by the `where` argument doesn't exist, create a new CustomerProfileQuestionOptions with this data.
   */
  create: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsCreateInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedCreateInput
  >;
  /**
   * In case the CustomerProfileQuestionOptions was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.CustomerProfileQuestionOptionsUpdateInput,
    Prisma.CustomerProfileQuestionOptionsUncheckedUpdateInput
  >;
};

/**
 * CustomerProfileQuestionOptions delete
 */
export type CustomerProfileQuestionOptionsDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
  /**
   * Filter which CustomerProfileQuestionOptions to delete.
   */
  where: Prisma.CustomerProfileQuestionOptionsWhereUniqueInput;
};

/**
 * CustomerProfileQuestionOptions deleteMany
 */
export type CustomerProfileQuestionOptionsDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which CustomerProfileQuestionOptions to delete
   */
  where?: Prisma.CustomerProfileQuestionOptionsWhereInput;
  /**
   * Limit how many CustomerProfileQuestionOptions to delete.
   */
  limit?: number;
};

/**
 * CustomerProfileQuestionOptions.answers
 */
export type CustomerProfileQuestionOptions$answersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileAnswers
   */
  select?: Prisma.CustomerProfileAnswersSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileAnswers
   */
  omit?: Prisma.CustomerProfileAnswersOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileAnswersInclude<ExtArgs> | null;
  where?: Prisma.CustomerProfileAnswersWhereInput;
  orderBy?:
    | Prisma.CustomerProfileAnswersOrderByWithRelationInput
    | Prisma.CustomerProfileAnswersOrderByWithRelationInput[];
  cursor?: Prisma.CustomerProfileAnswersWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.CustomerProfileAnswersScalarFieldEnum
    | Prisma.CustomerProfileAnswersScalarFieldEnum[];
};

/**
 * CustomerProfileQuestionOptions without action
 */
export type CustomerProfileQuestionOptionsDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CustomerProfileQuestionOptions
   */
  select?: Prisma.CustomerProfileQuestionOptionsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CustomerProfileQuestionOptions
   */
  omit?: Prisma.CustomerProfileQuestionOptionsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CustomerProfileQuestionOptionsInclude<ExtArgs> | null;
};
