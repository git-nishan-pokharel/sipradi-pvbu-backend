/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `VehicleGuidelines` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/library';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model VehicleGuidelines
 *
 */
export type VehicleGuidelinesModel =
  runtime.Types.Result.DefaultSelection<Prisma.$VehicleGuidelinesPayload>;

export type AggregateVehicleGuidelines = {
  _count: VehicleGuidelinesCountAggregateOutputType | null;
  _min: VehicleGuidelinesMinAggregateOutputType | null;
  _max: VehicleGuidelinesMaxAggregateOutputType | null;
};

export type VehicleGuidelinesMinAggregateOutputType = {
  id: string | null;
  guidelineType: $Enums.VehicleGuidelineType | null;
  content: string | null;
  vehicleModelId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type VehicleGuidelinesMaxAggregateOutputType = {
  id: string | null;
  guidelineType: $Enums.VehicleGuidelineType | null;
  content: string | null;
  vehicleModelId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type VehicleGuidelinesCountAggregateOutputType = {
  id: number;
  guidelineType: number;
  content: number;
  vehicleModelId: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type VehicleGuidelinesMinAggregateInputType = {
  id?: true;
  guidelineType?: true;
  content?: true;
  vehicleModelId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type VehicleGuidelinesMaxAggregateInputType = {
  id?: true;
  guidelineType?: true;
  content?: true;
  vehicleModelId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type VehicleGuidelinesCountAggregateInputType = {
  id?: true;
  guidelineType?: true;
  content?: true;
  vehicleModelId?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type VehicleGuidelinesAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which VehicleGuidelines to aggregate.
   */
  where?: Prisma.VehicleGuidelinesWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VehicleGuidelines to fetch.
   */
  orderBy?:
    | Prisma.VehicleGuidelinesOrderByWithRelationInput
    | Prisma.VehicleGuidelinesOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.VehicleGuidelinesWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VehicleGuidelines from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VehicleGuidelines.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned VehicleGuidelines
   **/
  _count?: true | VehicleGuidelinesCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: VehicleGuidelinesMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: VehicleGuidelinesMaxAggregateInputType;
};

export type GetVehicleGuidelinesAggregateType<
  T extends VehicleGuidelinesAggregateArgs,
> = {
  [P in keyof T & keyof AggregateVehicleGuidelines]: P extends
    | '_count'
    | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateVehicleGuidelines[P]>
    : Prisma.GetScalarType<T[P], AggregateVehicleGuidelines[P]>;
};

export type VehicleGuidelinesGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.VehicleGuidelinesWhereInput;
  orderBy?:
    | Prisma.VehicleGuidelinesOrderByWithAggregationInput
    | Prisma.VehicleGuidelinesOrderByWithAggregationInput[];
  by:
    | Prisma.VehicleGuidelinesScalarFieldEnum[]
    | Prisma.VehicleGuidelinesScalarFieldEnum;
  having?: Prisma.VehicleGuidelinesScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: VehicleGuidelinesCountAggregateInputType | true;
  _min?: VehicleGuidelinesMinAggregateInputType;
  _max?: VehicleGuidelinesMaxAggregateInputType;
};

export type VehicleGuidelinesGroupByOutputType = {
  id: string;
  guidelineType: $Enums.VehicleGuidelineType;
  content: string;
  vehicleModelId: string;
  createdAt: Date;
  updatedAt: Date;
  _count: VehicleGuidelinesCountAggregateOutputType | null;
  _min: VehicleGuidelinesMinAggregateOutputType | null;
  _max: VehicleGuidelinesMaxAggregateOutputType | null;
};

type GetVehicleGuidelinesGroupByPayload<
  T extends VehicleGuidelinesGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<VehicleGuidelinesGroupByOutputType, T['by']> & {
      [P in keyof T &
        keyof VehicleGuidelinesGroupByOutputType]: P extends '_count'
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], VehicleGuidelinesGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], VehicleGuidelinesGroupByOutputType[P]>;
    }
  >
>;

export type VehicleGuidelinesWhereInput = {
  AND?:
    | Prisma.VehicleGuidelinesWhereInput
    | Prisma.VehicleGuidelinesWhereInput[];
  OR?: Prisma.VehicleGuidelinesWhereInput[];
  NOT?:
    | Prisma.VehicleGuidelinesWhereInput
    | Prisma.VehicleGuidelinesWhereInput[];
  id?: Prisma.UuidFilter<'VehicleGuidelines'> | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFilter<'VehicleGuidelines'>
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFilter<'VehicleGuidelines'> | string;
  vehicleModelId?: Prisma.UuidFilter<'VehicleGuidelines'> | string;
  createdAt?: Prisma.DateTimeFilter<'VehicleGuidelines'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'VehicleGuidelines'> | Date | string;
  vehicleModel?: Prisma.XOR<
    Prisma.VehicleModelsScalarRelationFilter,
    Prisma.VehicleModelsWhereInput
  >;
};

export type VehicleGuidelinesOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  guidelineType?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  vehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  vehicleModel?: Prisma.VehicleModelsOrderByWithRelationInput;
};

export type VehicleGuidelinesWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?:
      | Prisma.VehicleGuidelinesWhereInput
      | Prisma.VehicleGuidelinesWhereInput[];
    OR?: Prisma.VehicleGuidelinesWhereInput[];
    NOT?:
      | Prisma.VehicleGuidelinesWhereInput
      | Prisma.VehicleGuidelinesWhereInput[];
    guidelineType?:
      | Prisma.EnumVehicleGuidelineTypeFilter<'VehicleGuidelines'>
      | $Enums.VehicleGuidelineType;
    content?: Prisma.StringFilter<'VehicleGuidelines'> | string;
    vehicleModelId?: Prisma.UuidFilter<'VehicleGuidelines'> | string;
    createdAt?: Prisma.DateTimeFilter<'VehicleGuidelines'> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<'VehicleGuidelines'> | Date | string;
    vehicleModel?: Prisma.XOR<
      Prisma.VehicleModelsScalarRelationFilter,
      Prisma.VehicleModelsWhereInput
    >;
  },
  'id'
>;

export type VehicleGuidelinesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  guidelineType?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  vehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.VehicleGuidelinesCountOrderByAggregateInput;
  _max?: Prisma.VehicleGuidelinesMaxOrderByAggregateInput;
  _min?: Prisma.VehicleGuidelinesMinOrderByAggregateInput;
};

export type VehicleGuidelinesScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.VehicleGuidelinesScalarWhereWithAggregatesInput
    | Prisma.VehicleGuidelinesScalarWhereWithAggregatesInput[];
  OR?: Prisma.VehicleGuidelinesScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.VehicleGuidelinesScalarWhereWithAggregatesInput
    | Prisma.VehicleGuidelinesScalarWhereWithAggregatesInput[];
  id?: Prisma.UuidWithAggregatesFilter<'VehicleGuidelines'> | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeWithAggregatesFilter<'VehicleGuidelines'>
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringWithAggregatesFilter<'VehicleGuidelines'> | string;
  vehicleModelId?:
    | Prisma.UuidWithAggregatesFilter<'VehicleGuidelines'>
    | string;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<'VehicleGuidelines'>
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<'VehicleGuidelines'>
    | Date
    | string;
};

export type VehicleGuidelinesCreateInput = {
  id?: string;
  guidelineType: $Enums.VehicleGuidelineType;
  content: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  vehicleModel: Prisma.VehicleModelsCreateNestedOneWithoutVehicleGuidelinesInput;
};

export type VehicleGuidelinesUncheckedCreateInput = {
  id?: string;
  guidelineType: $Enums.VehicleGuidelineType;
  content: string;
  vehicleModelId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type VehicleGuidelinesUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFieldUpdateOperationsInput
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  vehicleModel?: Prisma.VehicleModelsUpdateOneRequiredWithoutVehicleGuidelinesNestedInput;
};

export type VehicleGuidelinesUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFieldUpdateOperationsInput
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  vehicleModelId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VehicleGuidelinesCreateManyInput = {
  id?: string;
  guidelineType: $Enums.VehicleGuidelineType;
  content: string;
  vehicleModelId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type VehicleGuidelinesUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFieldUpdateOperationsInput
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VehicleGuidelinesUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFieldUpdateOperationsInput
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  vehicleModelId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VehicleGuidelinesListRelationFilter = {
  every?: Prisma.VehicleGuidelinesWhereInput;
  some?: Prisma.VehicleGuidelinesWhereInput;
  none?: Prisma.VehicleGuidelinesWhereInput;
};

export type VehicleGuidelinesOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type VehicleGuidelinesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  guidelineType?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  vehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type VehicleGuidelinesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  guidelineType?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  vehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type VehicleGuidelinesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  guidelineType?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  vehicleModelId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type VehicleGuidelinesCreateNestedManyWithoutVehicleModelInput = {
  create?:
    | Prisma.XOR<
        Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput,
        Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput
      >
    | Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput[]
    | Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput[];
  connectOrCreate?:
    | Prisma.VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput
    | Prisma.VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput[];
  createMany?: Prisma.VehicleGuidelinesCreateManyVehicleModelInputEnvelope;
  connect?:
    | Prisma.VehicleGuidelinesWhereUniqueInput
    | Prisma.VehicleGuidelinesWhereUniqueInput[];
};

export type VehicleGuidelinesUncheckedCreateNestedManyWithoutVehicleModelInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput,
          Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput
        >
      | Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput[]
      | Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput[];
    connectOrCreate?:
      | Prisma.VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput
      | Prisma.VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput[];
    createMany?: Prisma.VehicleGuidelinesCreateManyVehicleModelInputEnvelope;
    connect?:
      | Prisma.VehicleGuidelinesWhereUniqueInput
      | Prisma.VehicleGuidelinesWhereUniqueInput[];
  };

export type VehicleGuidelinesUpdateManyWithoutVehicleModelNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput,
        Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput
      >
    | Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput[]
    | Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput[];
  connectOrCreate?:
    | Prisma.VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput
    | Prisma.VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput[];
  upsert?:
    | Prisma.VehicleGuidelinesUpsertWithWhereUniqueWithoutVehicleModelInput
    | Prisma.VehicleGuidelinesUpsertWithWhereUniqueWithoutVehicleModelInput[];
  createMany?: Prisma.VehicleGuidelinesCreateManyVehicleModelInputEnvelope;
  set?:
    | Prisma.VehicleGuidelinesWhereUniqueInput
    | Prisma.VehicleGuidelinesWhereUniqueInput[];
  disconnect?:
    | Prisma.VehicleGuidelinesWhereUniqueInput
    | Prisma.VehicleGuidelinesWhereUniqueInput[];
  delete?:
    | Prisma.VehicleGuidelinesWhereUniqueInput
    | Prisma.VehicleGuidelinesWhereUniqueInput[];
  connect?:
    | Prisma.VehicleGuidelinesWhereUniqueInput
    | Prisma.VehicleGuidelinesWhereUniqueInput[];
  update?:
    | Prisma.VehicleGuidelinesUpdateWithWhereUniqueWithoutVehicleModelInput
    | Prisma.VehicleGuidelinesUpdateWithWhereUniqueWithoutVehicleModelInput[];
  updateMany?:
    | Prisma.VehicleGuidelinesUpdateManyWithWhereWithoutVehicleModelInput
    | Prisma.VehicleGuidelinesUpdateManyWithWhereWithoutVehicleModelInput[];
  deleteMany?:
    | Prisma.VehicleGuidelinesScalarWhereInput
    | Prisma.VehicleGuidelinesScalarWhereInput[];
};

export type VehicleGuidelinesUncheckedUpdateManyWithoutVehicleModelNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput,
          Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput
        >
      | Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput[]
      | Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput[];
    connectOrCreate?:
      | Prisma.VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput
      | Prisma.VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput[];
    upsert?:
      | Prisma.VehicleGuidelinesUpsertWithWhereUniqueWithoutVehicleModelInput
      | Prisma.VehicleGuidelinesUpsertWithWhereUniqueWithoutVehicleModelInput[];
    createMany?: Prisma.VehicleGuidelinesCreateManyVehicleModelInputEnvelope;
    set?:
      | Prisma.VehicleGuidelinesWhereUniqueInput
      | Prisma.VehicleGuidelinesWhereUniqueInput[];
    disconnect?:
      | Prisma.VehicleGuidelinesWhereUniqueInput
      | Prisma.VehicleGuidelinesWhereUniqueInput[];
    delete?:
      | Prisma.VehicleGuidelinesWhereUniqueInput
      | Prisma.VehicleGuidelinesWhereUniqueInput[];
    connect?:
      | Prisma.VehicleGuidelinesWhereUniqueInput
      | Prisma.VehicleGuidelinesWhereUniqueInput[];
    update?:
      | Prisma.VehicleGuidelinesUpdateWithWhereUniqueWithoutVehicleModelInput
      | Prisma.VehicleGuidelinesUpdateWithWhereUniqueWithoutVehicleModelInput[];
    updateMany?:
      | Prisma.VehicleGuidelinesUpdateManyWithWhereWithoutVehicleModelInput
      | Prisma.VehicleGuidelinesUpdateManyWithWhereWithoutVehicleModelInput[];
    deleteMany?:
      | Prisma.VehicleGuidelinesScalarWhereInput
      | Prisma.VehicleGuidelinesScalarWhereInput[];
  };

export type EnumVehicleGuidelineTypeFieldUpdateOperationsInput = {
  set?: $Enums.VehicleGuidelineType;
};

export type VehicleGuidelinesCreateWithoutVehicleModelInput = {
  id?: string;
  guidelineType: $Enums.VehicleGuidelineType;
  content: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput = {
  id?: string;
  guidelineType: $Enums.VehicleGuidelineType;
  content: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type VehicleGuidelinesCreateOrConnectWithoutVehicleModelInput = {
  where: Prisma.VehicleGuidelinesWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput,
    Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput
  >;
};

export type VehicleGuidelinesCreateManyVehicleModelInputEnvelope = {
  data:
    | Prisma.VehicleGuidelinesCreateManyVehicleModelInput
    | Prisma.VehicleGuidelinesCreateManyVehicleModelInput[];
  skipDuplicates?: boolean;
};

export type VehicleGuidelinesUpsertWithWhereUniqueWithoutVehicleModelInput = {
  where: Prisma.VehicleGuidelinesWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.VehicleGuidelinesUpdateWithoutVehicleModelInput,
    Prisma.VehicleGuidelinesUncheckedUpdateWithoutVehicleModelInput
  >;
  create: Prisma.XOR<
    Prisma.VehicleGuidelinesCreateWithoutVehicleModelInput,
    Prisma.VehicleGuidelinesUncheckedCreateWithoutVehicleModelInput
  >;
};

export type VehicleGuidelinesUpdateWithWhereUniqueWithoutVehicleModelInput = {
  where: Prisma.VehicleGuidelinesWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.VehicleGuidelinesUpdateWithoutVehicleModelInput,
    Prisma.VehicleGuidelinesUncheckedUpdateWithoutVehicleModelInput
  >;
};

export type VehicleGuidelinesUpdateManyWithWhereWithoutVehicleModelInput = {
  where: Prisma.VehicleGuidelinesScalarWhereInput;
  data: Prisma.XOR<
    Prisma.VehicleGuidelinesUpdateManyMutationInput,
    Prisma.VehicleGuidelinesUncheckedUpdateManyWithoutVehicleModelInput
  >;
};

export type VehicleGuidelinesScalarWhereInput = {
  AND?:
    | Prisma.VehicleGuidelinesScalarWhereInput
    | Prisma.VehicleGuidelinesScalarWhereInput[];
  OR?: Prisma.VehicleGuidelinesScalarWhereInput[];
  NOT?:
    | Prisma.VehicleGuidelinesScalarWhereInput
    | Prisma.VehicleGuidelinesScalarWhereInput[];
  id?: Prisma.UuidFilter<'VehicleGuidelines'> | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFilter<'VehicleGuidelines'>
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFilter<'VehicleGuidelines'> | string;
  vehicleModelId?: Prisma.UuidFilter<'VehicleGuidelines'> | string;
  createdAt?: Prisma.DateTimeFilter<'VehicleGuidelines'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'VehicleGuidelines'> | Date | string;
};

export type VehicleGuidelinesCreateManyVehicleModelInput = {
  id?: string;
  guidelineType: $Enums.VehicleGuidelineType;
  content: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type VehicleGuidelinesUpdateWithoutVehicleModelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFieldUpdateOperationsInput
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VehicleGuidelinesUncheckedUpdateWithoutVehicleModelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFieldUpdateOperationsInput
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VehicleGuidelinesUncheckedUpdateManyWithoutVehicleModelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  guidelineType?:
    | Prisma.EnumVehicleGuidelineTypeFieldUpdateOperationsInput
    | $Enums.VehicleGuidelineType;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VehicleGuidelinesSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    guidelineType?: boolean;
    content?: boolean;
    vehicleModelId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    vehicleModel?: boolean | Prisma.VehicleModelsDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['vehicleGuidelines']
>;

export type VehicleGuidelinesSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    guidelineType?: boolean;
    content?: boolean;
    vehicleModelId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    vehicleModel?: boolean | Prisma.VehicleModelsDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['vehicleGuidelines']
>;

export type VehicleGuidelinesSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    guidelineType?: boolean;
    content?: boolean;
    vehicleModelId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    vehicleModel?: boolean | Prisma.VehicleModelsDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['vehicleGuidelines']
>;

export type VehicleGuidelinesSelectScalar = {
  id?: boolean;
  guidelineType?: boolean;
  content?: boolean;
  vehicleModelId?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type VehicleGuidelinesOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'guidelineType'
  | 'content'
  | 'vehicleModelId'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['vehicleGuidelines']
>;
export type VehicleGuidelinesInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  vehicleModel?: boolean | Prisma.VehicleModelsDefaultArgs<ExtArgs>;
};
export type VehicleGuidelinesIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  vehicleModel?: boolean | Prisma.VehicleModelsDefaultArgs<ExtArgs>;
};
export type VehicleGuidelinesIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  vehicleModel?: boolean | Prisma.VehicleModelsDefaultArgs<ExtArgs>;
};

export type $VehicleGuidelinesPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'VehicleGuidelines';
  objects: {
    vehicleModel: Prisma.$VehicleModelsPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      guidelineType: $Enums.VehicleGuidelineType;
      content: string;
      vehicleModelId: string;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs['result']['vehicleGuidelines']
  >;
  composites: {};
};

export type VehicleGuidelinesGetPayload<
  S extends boolean | null | undefined | VehicleGuidelinesDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$VehicleGuidelinesPayload, S>;

export type VehicleGuidelinesCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  VehicleGuidelinesFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit'
> & {
  select?: VehicleGuidelinesCountAggregateInputType | true;
};

export interface VehicleGuidelinesDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['VehicleGuidelines'];
    meta: { name: 'VehicleGuidelines' };
  };
  /**
   * Find zero or one VehicleGuidelines that matches the filter.
   * @param {VehicleGuidelinesFindUniqueArgs} args - Arguments to find a VehicleGuidelines
   * @example
   * // Get one VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends VehicleGuidelinesFindUniqueArgs>(
    args: Prisma.SelectSubset<T, VehicleGuidelinesFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleGuidelinesClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one VehicleGuidelines that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {VehicleGuidelinesFindUniqueOrThrowArgs} args - Arguments to find a VehicleGuidelines
   * @example
   * // Get one VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends VehicleGuidelinesFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<
      T,
      VehicleGuidelinesFindUniqueOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__VehicleGuidelinesClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first VehicleGuidelines that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleGuidelinesFindFirstArgs} args - Arguments to find a VehicleGuidelines
   * @example
   * // Get one VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends VehicleGuidelinesFindFirstArgs>(
    args?: Prisma.SelectSubset<T, VehicleGuidelinesFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleGuidelinesClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first VehicleGuidelines that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleGuidelinesFindFirstOrThrowArgs} args - Arguments to find a VehicleGuidelines
   * @example
   * // Get one VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends VehicleGuidelinesFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<
      T,
      VehicleGuidelinesFindFirstOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__VehicleGuidelinesClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more VehicleGuidelines that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleGuidelinesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.findMany()
   *
   * // Get first 10 VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const vehicleGuidelinesWithIdOnly = await prisma.vehicleGuidelines.findMany({ select: { id: true } })
   *
   */
  findMany<T extends VehicleGuidelinesFindManyArgs>(
    args?: Prisma.SelectSubset<T, VehicleGuidelinesFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a VehicleGuidelines.
   * @param {VehicleGuidelinesCreateArgs} args - Arguments to create a VehicleGuidelines.
   * @example
   * // Create one VehicleGuidelines
   * const VehicleGuidelines = await prisma.vehicleGuidelines.create({
   *   data: {
   *     // ... data to create a VehicleGuidelines
   *   }
   * })
   *
   */
  create<T extends VehicleGuidelinesCreateArgs>(
    args: Prisma.SelectSubset<T, VehicleGuidelinesCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleGuidelinesClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many VehicleGuidelines.
   * @param {VehicleGuidelinesCreateManyArgs} args - Arguments to create many VehicleGuidelines.
   * @example
   * // Create many VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends VehicleGuidelinesCreateManyArgs>(
    args?: Prisma.SelectSubset<T, VehicleGuidelinesCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many VehicleGuidelines and returns the data saved in the database.
   * @param {VehicleGuidelinesCreateManyAndReturnArgs} args - Arguments to create many VehicleGuidelines.
   * @example
   * // Create many VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many VehicleGuidelines and only return the `id`
   * const vehicleGuidelinesWithIdOnly = await prisma.vehicleGuidelines.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends VehicleGuidelinesCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      VehicleGuidelinesCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a VehicleGuidelines.
   * @param {VehicleGuidelinesDeleteArgs} args - Arguments to delete one VehicleGuidelines.
   * @example
   * // Delete one VehicleGuidelines
   * const VehicleGuidelines = await prisma.vehicleGuidelines.delete({
   *   where: {
   *     // ... filter to delete one VehicleGuidelines
   *   }
   * })
   *
   */
  delete<T extends VehicleGuidelinesDeleteArgs>(
    args: Prisma.SelectSubset<T, VehicleGuidelinesDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleGuidelinesClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one VehicleGuidelines.
   * @param {VehicleGuidelinesUpdateArgs} args - Arguments to update one VehicleGuidelines.
   * @example
   * // Update one VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends VehicleGuidelinesUpdateArgs>(
    args: Prisma.SelectSubset<T, VehicleGuidelinesUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleGuidelinesClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more VehicleGuidelines.
   * @param {VehicleGuidelinesDeleteManyArgs} args - Arguments to filter VehicleGuidelines to delete.
   * @example
   * // Delete a few VehicleGuidelines
   * const { count } = await prisma.vehicleGuidelines.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends VehicleGuidelinesDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, VehicleGuidelinesDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more VehicleGuidelines.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleGuidelinesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends VehicleGuidelinesUpdateManyArgs>(
    args: Prisma.SelectSubset<T, VehicleGuidelinesUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more VehicleGuidelines and returns the data updated in the database.
   * @param {VehicleGuidelinesUpdateManyAndReturnArgs} args - Arguments to update many VehicleGuidelines.
   * @example
   * // Update many VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more VehicleGuidelines and only return the `id`
   * const vehicleGuidelinesWithIdOnly = await prisma.vehicleGuidelines.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends VehicleGuidelinesUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      VehicleGuidelinesUpdateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one VehicleGuidelines.
   * @param {VehicleGuidelinesUpsertArgs} args - Arguments to update or create a VehicleGuidelines.
   * @example
   * // Update or create a VehicleGuidelines
   * const vehicleGuidelines = await prisma.vehicleGuidelines.upsert({
   *   create: {
   *     // ... data to create a VehicleGuidelines
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the VehicleGuidelines we want to update
   *   }
   * })
   */
  upsert<T extends VehicleGuidelinesUpsertArgs>(
    args: Prisma.SelectSubset<T, VehicleGuidelinesUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleGuidelinesClient<
    runtime.Types.Result.GetResult<
      Prisma.$VehicleGuidelinesPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of VehicleGuidelines.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleGuidelinesCountArgs} args - Arguments to filter VehicleGuidelines to count.
   * @example
   * // Count the number of VehicleGuidelines
   * const count = await prisma.vehicleGuidelines.count({
   *   where: {
   *     // ... the filter for the VehicleGuidelines we want to count
   *   }
   * })
   **/
  count<T extends VehicleGuidelinesCountArgs>(
    args?: Prisma.Subset<T, VehicleGuidelinesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            VehicleGuidelinesCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a VehicleGuidelines.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleGuidelinesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends VehicleGuidelinesAggregateArgs>(
    args: Prisma.Subset<T, VehicleGuidelinesAggregateArgs>,
  ): Prisma.PrismaPromise<GetVehicleGuidelinesAggregateType<T>>;

  /**
   * Group by VehicleGuidelines.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VehicleGuidelinesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends VehicleGuidelinesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: VehicleGuidelinesGroupByArgs['orderBy'] }
      : { orderBy?: VehicleGuidelinesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      VehicleGuidelinesGroupByArgs,
      OrderByArg
    > &
      InputErrors,
  ): {} extends InputErrors
    ? GetVehicleGuidelinesGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the VehicleGuidelines model
   */
  readonly fields: VehicleGuidelinesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for VehicleGuidelines.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__VehicleGuidelinesClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  vehicleModel<T extends Prisma.VehicleModelsDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.VehicleModelsDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__VehicleModelsClient<
    | runtime.Types.Result.GetResult<
        Prisma.$VehicleModelsPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the VehicleGuidelines model
 */
export interface VehicleGuidelinesFieldRefs {
  readonly id: Prisma.FieldRef<'VehicleGuidelines', 'String'>;
  readonly guidelineType: Prisma.FieldRef<
    'VehicleGuidelines',
    'VehicleGuidelineType'
  >;
  readonly content: Prisma.FieldRef<'VehicleGuidelines', 'String'>;
  readonly vehicleModelId: Prisma.FieldRef<'VehicleGuidelines', 'String'>;
  readonly createdAt: Prisma.FieldRef<'VehicleGuidelines', 'DateTime'>;
  readonly updatedAt: Prisma.FieldRef<'VehicleGuidelines', 'DateTime'>;
}

// Custom InputTypes
/**
 * VehicleGuidelines findUnique
 */
export type VehicleGuidelinesFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleGuidelines to fetch.
   */
  where: Prisma.VehicleGuidelinesWhereUniqueInput;
};

/**
 * VehicleGuidelines findUniqueOrThrow
 */
export type VehicleGuidelinesFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleGuidelines to fetch.
   */
  where: Prisma.VehicleGuidelinesWhereUniqueInput;
};

/**
 * VehicleGuidelines findFirst
 */
export type VehicleGuidelinesFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleGuidelines to fetch.
   */
  where?: Prisma.VehicleGuidelinesWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VehicleGuidelines to fetch.
   */
  orderBy?:
    | Prisma.VehicleGuidelinesOrderByWithRelationInput
    | Prisma.VehicleGuidelinesOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for VehicleGuidelines.
   */
  cursor?: Prisma.VehicleGuidelinesWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VehicleGuidelines from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VehicleGuidelines.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of VehicleGuidelines.
   */
  distinct?:
    | Prisma.VehicleGuidelinesScalarFieldEnum
    | Prisma.VehicleGuidelinesScalarFieldEnum[];
};

/**
 * VehicleGuidelines findFirstOrThrow
 */
export type VehicleGuidelinesFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleGuidelines to fetch.
   */
  where?: Prisma.VehicleGuidelinesWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VehicleGuidelines to fetch.
   */
  orderBy?:
    | Prisma.VehicleGuidelinesOrderByWithRelationInput
    | Prisma.VehicleGuidelinesOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for VehicleGuidelines.
   */
  cursor?: Prisma.VehicleGuidelinesWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VehicleGuidelines from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VehicleGuidelines.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of VehicleGuidelines.
   */
  distinct?:
    | Prisma.VehicleGuidelinesScalarFieldEnum
    | Prisma.VehicleGuidelinesScalarFieldEnum[];
};

/**
 * VehicleGuidelines findMany
 */
export type VehicleGuidelinesFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * Filter, which VehicleGuidelines to fetch.
   */
  where?: Prisma.VehicleGuidelinesWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VehicleGuidelines to fetch.
   */
  orderBy?:
    | Prisma.VehicleGuidelinesOrderByWithRelationInput
    | Prisma.VehicleGuidelinesOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing VehicleGuidelines.
   */
  cursor?: Prisma.VehicleGuidelinesWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VehicleGuidelines from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VehicleGuidelines.
   */
  skip?: number;
  distinct?:
    | Prisma.VehicleGuidelinesScalarFieldEnum
    | Prisma.VehicleGuidelinesScalarFieldEnum[];
};

/**
 * VehicleGuidelines create
 */
export type VehicleGuidelinesCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * The data needed to create a VehicleGuidelines.
   */
  data: Prisma.XOR<
    Prisma.VehicleGuidelinesCreateInput,
    Prisma.VehicleGuidelinesUncheckedCreateInput
  >;
};

/**
 * VehicleGuidelines createMany
 */
export type VehicleGuidelinesCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many VehicleGuidelines.
   */
  data:
    | Prisma.VehicleGuidelinesCreateManyInput
    | Prisma.VehicleGuidelinesCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * VehicleGuidelines createManyAndReturn
 */
export type VehicleGuidelinesCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * The data used to create many VehicleGuidelines.
   */
  data:
    | Prisma.VehicleGuidelinesCreateManyInput
    | Prisma.VehicleGuidelinesCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * VehicleGuidelines update
 */
export type VehicleGuidelinesUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * The data needed to update a VehicleGuidelines.
   */
  data: Prisma.XOR<
    Prisma.VehicleGuidelinesUpdateInput,
    Prisma.VehicleGuidelinesUncheckedUpdateInput
  >;
  /**
   * Choose, which VehicleGuidelines to update.
   */
  where: Prisma.VehicleGuidelinesWhereUniqueInput;
};

/**
 * VehicleGuidelines updateMany
 */
export type VehicleGuidelinesUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update VehicleGuidelines.
   */
  data: Prisma.XOR<
    Prisma.VehicleGuidelinesUpdateManyMutationInput,
    Prisma.VehicleGuidelinesUncheckedUpdateManyInput
  >;
  /**
   * Filter which VehicleGuidelines to update
   */
  where?: Prisma.VehicleGuidelinesWhereInput;
  /**
   * Limit how many VehicleGuidelines to update.
   */
  limit?: number;
};

/**
 * VehicleGuidelines updateManyAndReturn
 */
export type VehicleGuidelinesUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * The data used to update VehicleGuidelines.
   */
  data: Prisma.XOR<
    Prisma.VehicleGuidelinesUpdateManyMutationInput,
    Prisma.VehicleGuidelinesUncheckedUpdateManyInput
  >;
  /**
   * Filter which VehicleGuidelines to update
   */
  where?: Prisma.VehicleGuidelinesWhereInput;
  /**
   * Limit how many VehicleGuidelines to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * VehicleGuidelines upsert
 */
export type VehicleGuidelinesUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * The filter to search for the VehicleGuidelines to update in case it exists.
   */
  where: Prisma.VehicleGuidelinesWhereUniqueInput;
  /**
   * In case the VehicleGuidelines found by the `where` argument doesn't exist, create a new VehicleGuidelines with this data.
   */
  create: Prisma.XOR<
    Prisma.VehicleGuidelinesCreateInput,
    Prisma.VehicleGuidelinesUncheckedCreateInput
  >;
  /**
   * In case the VehicleGuidelines was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.VehicleGuidelinesUpdateInput,
    Prisma.VehicleGuidelinesUncheckedUpdateInput
  >;
};

/**
 * VehicleGuidelines delete
 */
export type VehicleGuidelinesDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
  /**
   * Filter which VehicleGuidelines to delete.
   */
  where: Prisma.VehicleGuidelinesWhereUniqueInput;
};

/**
 * VehicleGuidelines deleteMany
 */
export type VehicleGuidelinesDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which VehicleGuidelines to delete
   */
  where?: Prisma.VehicleGuidelinesWhereInput;
  /**
   * Limit how many VehicleGuidelines to delete.
   */
  limit?: number;
};

/**
 * VehicleGuidelines without action
 */
export type VehicleGuidelinesDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the VehicleGuidelines
   */
  select?: Prisma.VehicleGuidelinesSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VehicleGuidelines
   */
  omit?: Prisma.VehicleGuidelinesOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VehicleGuidelinesInclude<ExtArgs> | null;
};
